{
	"info": {
		"_postman_id": "41b37b5b-d281-4ff3-b767-4e635ed9a064",
		"name": "openBOS Ontology Cloud Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "gateway/{gwid}/api/v1/ontology",
			"item": [
				{
					"name": "Ontology",
					"item": [
						{
							"name": "property",
							"item": [
								{
									"name": "device",
									"item": [
										{
											"name": "Get the fieldbus devices of the property",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/property/device",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"property",
														"device"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														}
													]
												},
												"description": "The devices are the equipment on the fieldbus network that are controlling actuators and sensors.\r\n\r\nThis resource path retrieves the list of physical fieldbus devices that are defined within the property"
											},
											"response": [
												{
													"name": "List of fieldbus devices within the project",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/property/device",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"property",
																"device"
															],
															"variable": [
																{
																	"key": "gwid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"protocolArguments\": \"string\",\n  \"deviceTemplateId\": \"string\",\n  \"name\": \"string\",\n  \"id\": \"string\"\n }\n]"
												}
											]
										},
										{
											"name": "Get the detail of a fieldbus device",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/property/device/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"property",
														"device",
														":id"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) "
														}
													]
												},
												"description": "The devices are the equipment on the fieldbus network that are controlling actuators and sensors.\r\n\r\nThis resource path retrieves the detail of a physical fieldbus device"
											},
											"response": [
												{
													"name": "Detail information of the fieldbus device",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/property/device/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"property",
																"device",
																":id"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"functionalBlocks\": [\n  {\n   \"deviceInstanceId\": \"adipisicing aliquip\",\n   \"name\": \"anim cupidatat\",\n   \"deviceFunctionalBlockTemplateId\": \"labore incididunt\",\n   \"tags\": [\n    \"in Ut labore\",\n    \"dolo\"\n   ],\n   \"assignationDone\": false,\n   \"jobmask\": -28311068,\n   \"templateId\": \"ex aute anim\",\n   \"specializationId\": \"voluptate ipsum\",\n   \"id\": \"fugiat irure\",\n   \"zones\": [\n    {\n     \"inZone\": false,\n     \"zoneId\": \"deserunt fugiat laboris\"\n    },\n    {\n     \"inZone\": true,\n     \"zoneId\": \"adipisicing ut aute Excepteur\"\n    }\n   ],\n   \"specializationType\": \"proident v\",\n   \"jobmaskIds\": [\n    \"Ut consectetur\",\n    \"officia Duis est ea\"\n   ],\n   \"master\": false,\n   \"datapoints\": [\n    {\n     \"networkId\": \"id aliqua non mollit occaecat\",\n     \"protocolArguments\": {},\n     \"direction\": \"Configuration\",\n     \"name\": \"officia commo\",\n     \"typeId\": \"Excepteur nostrud elit sint\",\n     \"converterId\": \"ea velit in\",\n     \"jobmask\": -83769585,\n     \"tags\": [\n      \"dolore anim incididunt amet\",\n      \"ipsum dolor\"\n     ],\n     \"busUnitId\": \"proident do velit\",\n     \"zoneId\": \"fugiat qui ipsum\",\n     \"stationId\": \"esse sunt cillum dolor\",\n     \"jobmaskIds\": [\n      \"minim Lorem officia sint veniam\",\n      \"mollit voluptate enim\"\n     ],\n     \"functionalBlockId\": \"eiusmod sunt\",\n     \"templateId\": \"reprehenderit\",\n     \"displayUnitId\": \"in\",\n     \"id\": \"sint ex ullamco\"\n    },\n    {\n     \"networkId\": \"esse cupidatat officia\",\n     \"protocolArguments\": {},\n     \"direction\": \"Command\",\n     \"name\": \"id dolore in mollit\",\n     \"typeId\": \"eiusmod dolor velit labore deserunt\",\n     \"converterId\": \"dolore consequat dolor quis\",\n     \"jobmask\": 1624720,\n     \"tags\": [\n      \"pariatur\",\n      \"culpa velit ad\"\n     ],\n     \"busUnitId\": \"qui fugiat minim\",\n     \"zoneId\": \"tempor adipisicing dolore occaecat\",\n     \"stationId\": \"dolore eu\",\n     \"jobmaskIds\": [\n      \"aliqua sit\",\n      \"sit aliqua nisi\"\n     ],\n     \"functionalBlockId\": \"qui exercitation\",\n     \"templateId\": \"occaecat eu veniam aliquip\",\n     \"displayUnitId\": \"in ea\",\n     \"id\": \"voluptate Duis pariatur sunt\"\n    }\n   ],\n   \"iconFillColor\": \"mollit eu dolor\",\n   \"properties\": [\n    {\n     \"typeId\": \"laborum voluptate sit\",\n     \"direction\": \"Configuration\",\n     \"name\": \"est sint sunt pariatur deserunt\",\n     \"tags\": [\n      \"voluptate commodo deserunt labore\",\n      \"esse labore Excepteur qui\"\n     ],\n     \"roleId\": \"magna in Lorem do\",\n     \"jobmask\": -5366279,\n     \"userId\": \"aliqua cupidatat incididunt velit l\",\n     \"value\": {},\n     \"zoneId\": \"consectetur mollit\",\n     \"isOverride\": false,\n     \"jobmaskIds\": [\n      \"ut pariatur consequat\",\n      \"quis sunt in do\"\n     ],\n     \"functionalBlockId\": \"nisi non\",\n     \"templateId\": \"officia occaec\",\n     \"displayUnitId\": \"reprehenderit ipsum dolor\",\n     \"id\": \"incididunt quis\"\n    },\n    {\n     \"typeId\": \"labore ut\",\n     \"direction\": \"Command\",\n     \"name\": \"ex in laborum nulla\",\n     \"tags\": [\n      \"pariatur incididunt aute tempor\",\n      \"in aliqua sunt\"\n     ],\n     \"roleId\": \"ex eiusmod\",\n     \"jobmask\": -66437037,\n     \"userId\": \"in non fugiat\",\n     \"value\": {},\n     \"zoneId\": \"consequat\",\n     \"isOverride\": true,\n     \"jobmaskIds\": [\n      \"veniam qui ut cupidatat\",\n      \"laboris aliquip culpa qui incididunt\"\n     ],\n     \"functionalBlockId\": \"irure ea\",\n     \"templateId\": \"veniam consequat non dolore\",\n     \"displayUnitId\": \"in minim aute\",\n     \"id\": \"ea velit ut\"\n    }\n   ],\n   \"icon\": \"Ut aliquip in in\"\n  },\n  {\n   \"deviceInstanceId\": \"fugiat eiusmod deserunt exercitation\",\n   \"name\": \"consecte\",\n   \"deviceFunctionalBlockTemplateId\": \"non nisi sint dolor Ut\",\n   \"tags\": [\n    \"proident cupidatat enim\",\n    \"mollit cup\"\n   ],\n   \"assignationDone\": false,\n   \"jobmask\": 34641190,\n   \"templateId\": \"mollit dolore nulla reprehenderit\",\n   \"specializationId\": \"est cupidatat in ut\",\n   \"id\": \"magna eiusmod\",\n   \"zones\": [\n    {\n     \"inZone\": true,\n     \"zoneId\": \"Excepteur\"\n    },\n    {\n     \"inZone\": false,\n     \"zoneId\": \"in qui nulla Lorem reprehenderit\"\n    }\n   ],\n   \"specializationType\": \"esse elit\",\n   \"jobmaskIds\": [\n    \"nulla\",\n    \"dolore aliquip minim\"\n   ],\n   \"master\": true,\n   \"datapoints\": [\n    {\n     \"networkId\": \"eiusmod amet dolor in\",\n     \"protocolArguments\": {},\n     \"direction\": \"Feedback\",\n     \"name\": \"Ut aliquip adipisicing mollit\",\n     \"typeId\": \"ipsum labore\",\n     \"converterId\": \"in magna\",\n     \"jobmask\": -53429080,\n     \"tags\": [\n      \"do ex anim est consectetur\",\n      \"adipisicing \"\n     ],\n     \"busUnitId\": \"eu in commodo veniam adipisicing\",\n     \"zoneId\": \"exercitation\",\n     \"stationId\": \"culpa nisi elit dolo\",\n     \"jobmaskIds\": [\n      \"laboris velit\",\n      \"ut labore nulla\"\n     ],\n     \"functionalBlockId\": \"ut deserunt\",\n     \"templateId\": \"sed et\",\n     \"displayUnitId\": \"exercitat\",\n     \"id\": \"nulla dolore fugiat elit\"\n    },\n    {\n     \"networkId\": \"in minim commodo mollit\",\n     \"protocolArguments\": {},\n     \"direction\": \"CommandAndFeedback\",\n     \"name\": \"proident\",\n     \"typeId\": \"laborum esse\",\n     \"converterId\": \"consectetur quis\",\n     \"jobmask\": -56427184,\n     \"tags\": [\n      \"deserunt quis nostrud laborum esse\",\n      \"quis commodo\"\n     ],\n     \"busUnitId\": \"nostrud cillum\",\n     \"zoneId\": \"officia labore aute mollit\",\n     \"stationId\": \"pariatur nisi\",\n     \"jobmaskIds\": [\n      \"velit Excepteur ut\",\n      \"cillum adipisicing ea\"\n     ],\n     \"functionalBlockId\": \"aliqua fugia\",\n     \"templateId\": \"in et Excepteur nisi\",\n     \"displayUnitId\": \"ipsum nisi irure\",\n     \"id\": \"tempor\"\n    }\n   ],\n   \"iconFillColor\": \"officia exercitation\",\n   \"properties\": [\n    {\n     \"typeId\": \"eu in\",\n     \"direction\": \"CommandAndFeedback\",\n     \"name\": \"occaecat cupidatat\",\n     \"tags\": [\n      \"nisi proident\",\n      \"dolor nostrud magna officia\"\n     ],\n     \"roleId\": \"dolore ex ullamco\",\n     \"jobmask\": 74321181,\n     \"userId\": \"laboris\",\n     \"value\": {},\n     \"zoneId\": \"est dolor\",\n     \"isOverride\": true,\n     \"jobmaskIds\": [\n      \"Duis exercitation dolore ut pariatur\",\n      \"esse commodo occaecat ea\"\n     ],\n     \"functionalBlockId\": \"pariatur ipsum in irure ad\",\n     \"templateId\": \"proident consequat eiusmod\",\n     \"displayUnitId\": \"cillum\",\n     \"id\": \"proident\"\n    },\n    {\n     \"typeId\": \"cillum dolor fugiat\",\n     \"direction\": \"Feedback\",\n     \"name\": \"ex\",\n     \"tags\": [\n      \"veniam sed dolor\",\n      \"ut ad id officia\"\n     ],\n     \"roleId\": \"enim cupidatat\",\n     \"jobmask\": -68477739,\n     \"userId\": \"sunt\",\n     \"value\": {},\n     \"zoneId\": \"irure nisi nostrud anim\",\n     \"isOverride\": false,\n     \"jobmaskIds\": [\n      \"proide\",\n      \"sint qui quis aliqua ex\"\n     ],\n     \"functionalBlockId\": \"Lorem ullamco proident non\",\n     \"templateId\": \"ullamco\",\n     \"displayUnitId\": \"id cupidatat\",\n     \"id\": \"est\"\n    }\n   ],\n   \"icon\": \"veniam\"\n  }\n ],\n \"name\": \"ad\",\n \"protocolArguments\": \"sint tempor\",\n \"physicalPoints\": [\n  {\n   \"protocolArguments\": {},\n   \"type\": {\n    \"type\": \"labore quis est consectetur sint\",\n    \"tag\": \"consectetur id laboris aute sint\",\n    \"id\": \"amet ex elit\",\n    \"transport\": \"MBus\",\n    \"name\": \"ea velit\"\n   },\n   \"name\": \"et irure\"\n  },\n  {\n   \"protocolArguments\": {},\n   \"type\": {\n    \"type\": \"nostrud dolore enim\",\n    \"tag\": \"cupidatat Excepteur\",\n    \"id\": \"irure laborum ipsum\",\n    \"transport\": \"Memory\",\n    \"name\": \"id Lorem\"\n   },\n   \"name\": \"dolor ut aliqua deserunt\"\n  }\n ],\n \"deviceTemplateId\": \"quis ut\",\n \"id\": \"in dolor\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get the property of the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/property",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"property"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "This resource path retrieves the property object hich is the root object in the ontology of the openBos hierarchy"
									},
									"response": [
										{
											"name": "Main property of the project",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/property",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"property"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"people\": \"string\",\n \"image\": \"string\",\n \"datapoints\": [\n  {\n   \"networkId\": \"string\",\n   \"protocolArguments\": {},\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"typeId\": \"string\",\n   \"converterId\": \"string\",\n   \"jobmask\": 0,\n   \"tags\": [\n    \"string\"\n   ],\n   \"busUnitId\": \"string\",\n   \"zoneId\": \"string\",\n   \"stationId\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"id\": \"string\",\n \"gpsLat\": \"string\",\n \"childrenIds\": [\n  \"string\"\n ],\n \"parentIds\": [\n  \"string\"\n ],\n \"surfaceNet\": \"string\",\n \"authorized\": true,\n \"type\": \"Physical\",\n \"gpsLon\": \"string\",\n \"functionalBlocks\": [\n  {\n   \"group\": \"string\",\n   \"functionalBlockId\": \"string\",\n   \"masterMode\": \"None\",\n   \"inZone\": true\n  }\n ],\n \"buildings\": \"string\",\n \"tags\": [\n  \"string\"\n ],\n \"address1\": \"string\",\n \"address2\": \"string\",\n \"administrators\": \"string\",\n \"visitors\": \"string\",\n \"surfaceGross\": \"string\",\n \"facilityManagers\": \"string\",\n \"propertyZoneType\": \"Property\",\n \"iconFillColor\": \"string\",\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"roleId\": \"string\",\n   \"jobmask\": 0,\n   \"userId\": \"string\",\n   \"value\": {},\n   \"zoneId\": \"string\",\n   \"isOverride\": true,\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"icon\": \"string\",\n \"town\": \"string\",\n \"owners\": \"string\",\n \"name\": \"string\",\n \"country\": \"string\",\n \"propertyManagers\": \"string\",\n \"devices\": \"string\",\n \"templateId\": \"string\",\n \"tenants\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "building",
							"item": [
								{
									"name": "Get the buildings defined in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/building",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"building"
											],
											"query": [
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "<br>Contains search pattern to produce the list. If no set all items will be returned.\r\n<br></br>\r\n            Filter can look like : \r\n            <ul>Name contains \"A\"</ul><ul>Name = \"A\"</ul><ul>Name startswith \"A\"</ul><ul>Name endswith \"A\"</ul><ul>Tags contains \"A\"</ul><br>And/Or can be used to generate complex query like : <b>(</b>Tags contains \"A\"<b>)</b><b>or</b><b>(</b>Name endswith \"r\"<b>)</b>",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get the buildings defined in the project"
									},
									"response": [
										{
											"name": "List of buildings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/building",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"building"
													],
													"query": [
														{
															"key": "filter",
															"value": "Name endswith \"xyz\"",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"iconFillColor\": \"string\",\n  \"templateId\": \"string\",\n  \"propertyZoneType\": \"Property\",\n  \"type\": \"Physical\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get the detailed information of a building",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/building/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"building",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the building"
												}
											]
										},
										"description": "Detail information of building will contain information that will allow to traverse the hierarchy of the building.\r\nie: you can follow to the next structure by using the retrieved parameter \"structureChildren\" within the result object."
									},
									"response": [
										{
											"name": "Building detail information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/building/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"building",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"people\": \"string\",\n \"image\": \"string\",\n \"datapoints\": [\n  {\n   \"networkId\": \"string\",\n   \"protocolArguments\": {},\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"typeId\": \"string\",\n   \"converterId\": \"string\",\n   \"jobmask\": 0,\n   \"tags\": [\n    \"string\"\n   ],\n   \"busUnitId\": \"string\",\n   \"zoneId\": \"string\",\n   \"stationId\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"id\": \"string\",\n \"gpsLat\": \"string\",\n \"childrenIds\": [\n  \"string\"\n ],\n \"parentIds\": [\n  \"string\"\n ],\n \"surfaceNet\": \"string\",\n \"authorized\": true,\n \"zoneChildren\": \"string\",\n \"structures\": \"string\",\n \"gpsLon\": \"string\",\n \"zoneParents\": \"string\",\n \"functionalBlocks\": [\n  {\n   \"group\": \"string\",\n   \"functionalBlockId\": \"string\",\n   \"masterMode\": \"None\",\n   \"inZone\": true\n  }\n ],\n \"tags\": [\n  \"string\"\n ],\n \"administrators\": \"string\",\n \"visitors\": \"string\",\n \"surfaceGross\": \"string\",\n \"facilityManagers\": \"string\",\n \"propertyZoneType\": \"Property\",\n \"iconFillColor\": \"string\",\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"roleId\": \"string\",\n   \"jobmask\": 0,\n   \"userId\": \"string\",\n   \"value\": {},\n   \"zoneId\": \"string\",\n   \"isOverride\": true,\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"icon\": \"string\",\n \"owners\": \"string\",\n \"name\": \"string\",\n \"type\": \"Physical\",\n \"propertyManagers\": \"string\",\n \"templateId\": \"string\",\n \"property\": \"string\",\n \"tenants\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "space",
							"item": [
								{
									"name": "Returns the spaces defined in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/space",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"space"
											],
											"query": [
												{
													"key": "typeSpace",
													"value": "",
													"description": "Type of space that are filtered. Possible type of space can be found in the list of possible tags in documentation.",
													"disabled": true
												},
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "Filter criteria to limit the retrieved items (ie: Name contains \"ABC\" and Tags contains \"meeting\")",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "A space can be for example a meeting room, an office, a cafeteria a corridor\r\nIt is a space with a specific function within the building\r\n\r\nThis routes return all the spaces defined in the project. Meaning the generic zone with a tag $$space."
									},
									"response": [
										{
											"name": "List of matching logical area",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/space",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"space"
													],
													"query": [
														{
															"key": "typeSpace",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "filter",
															"value": "Name endswith \"xyz\"",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"iconFillColor\": \"string\",\n  \"templateId\": \"string\",\n  \"propertyZoneType\": \"Property\",\n  \"type\": \"Physical\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Returns a specific space defined in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/space/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"space",
												":id"
											],
											"query": [
												{
													"key": "typeSpace",
													"value": "consectetur minim ex Duis",
													"description": "Type of space that are filtered. Possible type of space can be found in the list of possible tags in documentation.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the space"
												}
											]
										},
										"description": "A space can be for example a meeting room, an office, a cafeteria a corridor\r\nIt is a space with a specific function within the building\r\n\r\nThis routes return the detail information of a space defined in the project."
									},
									"response": [
										{
											"name": "Space successfully found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/space/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"space",
														":id"
													],
													"query": [
														{
															"key": "typeSpace",
															"value": "consectetur minim ex Duis",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"parentIds\": [\n  \"string\"\n ],\n \"datapoints\": [\n  {\n   \"networkId\": \"string\",\n   \"protocolArguments\": {},\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"typeId\": \"string\",\n   \"converterId\": \"string\",\n   \"jobmask\": 0,\n   \"tags\": [\n    \"string\"\n   ],\n   \"busUnitId\": \"string\",\n   \"zoneId\": \"string\",\n   \"stationId\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"id\": \"string\",\n \"childrenIds\": [\n  \"string\"\n ],\n \"authorized\": true,\n \"spaceChildren\": \"string\",\n \"zoneChildren\": \"string\",\n \"spaceParents\": \"string\",\n \"type\": \"Physical\",\n \"structureParents\": \"string\",\n \"functionalBlocks\": [\n  {\n   \"group\": \"string\",\n   \"functionalBlockId\": \"string\",\n   \"masterMode\": \"None\",\n   \"inZone\": true\n  }\n ],\n \"tags\": [\n  \"string\"\n ],\n \"visitors\": \"string\",\n \"facilityManagers\": \"string\",\n \"spaceType\": \"string\",\n \"iconFillColor\": \"string\",\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"roleId\": \"string\",\n   \"jobmask\": 0,\n   \"userId\": \"string\",\n   \"value\": {},\n   \"zoneId\": \"string\",\n   \"isOverride\": true,\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"icon\": \"string\",\n \"owners\": \"string\",\n \"name\": \"string\",\n \"propertyZoneType\": \"Property\",\n \"propertyManagers\": \"string\",\n \"zoneParents\": \"string\",\n \"templateId\": \"string\",\n \"tenants\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "structure",
							"item": [
								{
									"name": "Get the list of structures defined in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/structure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"structure"
											],
											"query": [
												{
													"key": "typeStructure",
													"value": "",
													"description": "Filter criteria on the queried type of structure",
													"disabled": true
												},
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "Filter criteria to limit the retrieved items (ie: Name contains \"ABC\" and Tags contains \"meeting\")",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "A structure can be a floor, roof, facade, something that is fixed within a building.\r\n\r\nThis resource path retrieves the list of structure elements in the project."
									},
									"response": [
										{
											"name": "List of basic information on structures matching the filters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/structure",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"structure"
													],
													"query": [
														{
															"key": "typeStructure",
															"value": "",
															"disabled": true
														},
														{
															"key": "filter",
															"value": "Name endswith \"xyz\"",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"iconFillColor\": \"string\",\n  \"templateId\": \"string\",\n  \"propertyZoneType\": \"Property\",\n  \"type\": \"Physical\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get the detail information of a specific structure of the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/structure/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"structure",
												":id"
											],
											"query": [
												{
													"key": "typeStructure",
													"value": "consectetur minim ex Duis",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										},
										"description": "A structure can be a floor, roof, facade, something that is fixed within a building.\r\n\r\nThis resource path retrieves the detail information of a structure. The detail information contains parameters that can be used to traverse the hierarachy.\r\nie: parameter \"spaceChildren\" will contain the resource path to follow to get the list of spaces that are defined inside a specific struture."
									},
									"response": [
										{
											"name": "Detail information of a structure",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/structure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"structure",
														":id"
													],
													"query": [
														{
															"key": "typeStructure",
															"value": "consectetur minim ex Duis",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"people\": \"string\",\n \"structureChildren\": \"string\",\n \"datapoints\": [\n  {\n   \"networkId\": \"string\",\n   \"protocolArguments\": {},\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"typeId\": \"string\",\n   \"converterId\": \"string\",\n   \"jobmask\": 0,\n   \"tags\": [\n    \"string\"\n   ],\n   \"busUnitId\": \"string\",\n   \"zoneId\": \"string\",\n   \"stationId\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"mapview\": \"string\",\n \"id\": \"string\",\n \"structureType\": \"string\",\n \"childrenIds\": [\n  \"string\"\n ],\n \"parentIds\": [\n  \"string\"\n ],\n \"surfaceNet\": \"string\",\n \"authorized\": true,\n \"spaceChildren\": \"string\",\n \"zoneChildren\": \"string\",\n \"type\": \"Physical\",\n \"zoneParents\": \"string\",\n \"functionalBlocks\": [\n  {\n   \"group\": \"string\",\n   \"functionalBlockId\": \"string\",\n   \"masterMode\": \"None\",\n   \"inZone\": true\n  }\n ],\n \"tags\": [\n  \"string\"\n ],\n \"administrators\": \"string\",\n \"visitors\": \"string\",\n \"surfaceGross\": \"string\",\n \"facilityManagers\": \"string\",\n \"iconFillColor\": \"string\",\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"roleId\": \"string\",\n   \"jobmask\": 0,\n   \"userId\": \"string\",\n   \"value\": {},\n   \"zoneId\": \"string\",\n   \"isOverride\": true,\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"icon\": \"string\",\n \"building\": \"string\",\n \"owners\": \"string\",\n \"name\": \"string\",\n \"propertyZoneType\": \"Property\",\n \"propertyManagers\": \"string\",\n \"structureParents\": \"string\",\n \"templateId\": \"string\",\n \"tenants\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "area",
							"item": [
								{
									"name": "Get the logical areas defined in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/area",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"area"
											],
											"query": [
												{
													"key": "typeArea",
													"value": "",
													"description": "Type of area that are filtered. Possible type of space can be found in the list of available tags in the documentation.",
													"disabled": true
												},
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "Filter criteria to limit the retrieved items (ie: Name contains \"ABC\" and Tags contains \"meeting\")",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "An area can be for example a central HVAC area, with its related asset + the spaces that are supplied by this central HVAC asset\r\nIt has no \"physical\" meaning it is a grouping of several spaces\r\n\r\nThis routes return all the areas defined in the project"
									},
									"response": [
										{
											"name": "List of matching logical area",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/area",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"area"
													],
													"query": [
														{
															"key": "typeArea",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "filter",
															"value": "Name endswith \"xyz\"",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"iconFillColor\": \"string\",\n  \"templateId\": \"string\",\n  \"propertyZoneType\": \"Property\",\n  \"type\": \"Physical\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get an area defined in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/area/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"area",
												":id"
											],
											"query": [
												{
													"key": "typeZone",
													"value": "consectetur minim ex Duis",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the area"
												}
											]
										},
										"description": "An area can be for example a central HVAC area, with its related asset + the spaces that are supplied by this central HVAC asset\r\nIt has no \"physical\" meaning it is a grouping of several spaces\r\n\r\nThis routes return detail information of one areas defined in the project"
									},
									"response": [
										{
											"name": "List of matching logical area",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/area/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"area",
														":id"
													],
													"query": [
														{
															"key": "typeZone",
															"value": "consectetur minim ex Duis",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"parentIds\": [\n   \"string\"\n  ],\n  \"structureChildren\": \"string\",\n  \"datapoints\": [\n   {\n    \"networkId\": \"string\",\n    \"protocolArguments\": {},\n    \"direction\": \"Feedback\",\n    \"name\": \"string\",\n    \"typeId\": \"string\",\n    \"converterId\": \"string\",\n    \"jobmask\": 0,\n    \"tags\": [\n     \"string\"\n    ],\n    \"busUnitId\": \"string\",\n    \"zoneId\": \"string\",\n    \"stationId\": \"string\",\n    \"jobmaskIds\": [\n     \"string\"\n    ],\n    \"functionalBlockId\": \"string\",\n    \"templateId\": \"string\",\n    \"displayUnitId\": \"string\",\n    \"id\": \"string\"\n   }\n  ],\n  \"id\": \"string\",\n  \"childrenIds\": [\n   \"string\"\n  ],\n  \"authorized\": true,\n  \"spaceChildren\": \"string\",\n  \"zoneChildren\": \"string\",\n  \"spaceParents\": \"string\",\n  \"type\": \"Physical\",\n  \"structureParents\": \"string\",\n  \"functionalBlocks\": [\n   {\n    \"group\": \"string\",\n    \"functionalBlockId\": \"string\",\n    \"masterMode\": \"None\",\n    \"inZone\": true\n   }\n  ],\n  \"tags\": [\n   \"string\"\n  ],\n  \"administrators\": \"string\",\n  \"visitors\": \"string\",\n  \"facilityManagers\": \"string\",\n  \"zoneType\": \"string\",\n  \"iconFillColor\": \"string\",\n  \"properties\": [\n   {\n    \"typeId\": \"string\",\n    \"direction\": \"Feedback\",\n    \"name\": \"string\",\n    \"tags\": [\n     \"string\"\n    ],\n    \"roleId\": \"string\",\n    \"jobmask\": 0,\n    \"userId\": \"string\",\n    \"value\": {},\n    \"zoneId\": \"string\",\n    \"isOverride\": true,\n    \"jobmaskIds\": [\n     \"string\"\n    ],\n    \"functionalBlockId\": \"string\",\n    \"templateId\": \"string\",\n    \"displayUnitId\": \"string\",\n    \"id\": \"string\"\n   }\n  ],\n  \"icon\": \"string\",\n  \"owners\": \"string\",\n  \"name\": \"string\",\n  \"propertyZoneType\": \"Property\",\n  \"propertyManagers\": \"string\",\n  \"zoneParents\": \"string\",\n  \"templateId\": \"string\",\n  \"tenants\": \"string\"\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "zone",
							"item": [
								{
									"name": "Returns the list of zones in the project in a generic way",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"zone"
											],
											"query": [
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "<br>Contains search pattern to produce the list. If no set all items will be returned.\r\n<br></br>\r\n            Filter can look like : \r\n            <ul>Name contains \"A\"</ul><ul>Name = \"A\"</ul><ul>Name startswith \"A\"</ul><ul>Name endswith \"A\"</ul><ul>Tags contains \"A\"</ul><br>And/Or can be used to generate complex query like : <b>(</b>Tags contains \"A\"<b>)</b><b>or</b><b>(</b>Name endswith \"r\"<b>)</b>",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "All ontology property, building, structure, space, area are considered as generic zone in openBOS\r\nThis resource path allows to query the whole zone concept in a generic manner."
									},
									"response": [
										{
											"name": "List of zone instances matching the filter criteria",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zone",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"zone"
													],
													"query": [
														{
															"key": "filter",
															"value": "Name endswith \"xyz\"",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"iconFillColor\": \"string\",\n  \"templateId\": \"string\",\n  \"propertyZoneType\": \"Property\",\n  \"type\": \"Physical\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Find the parents of a certain type for a building, structure, space, area or generic zone inside the roject",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zone/parents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"zone",
												"parents",
												":id"
											],
											"query": [
												{
													"key": "parentsType",
													"value": "Area",
													"description": "type of parents",
													"disabled": true
												},
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "<br>Contains search pattern to produce the list. If no set all items will be returned.\r\n<br></br>\r\n            Filter can look like : \r\n            <ul>Name contains \"A\"</ul><ul>Name = \"A\"</ul><ul>Name startswith \"A\"</ul><ul>Name endswith \"A\"</ul><ul>Tags contains \"A\"</ul><br>And/Or can be used to generate complex query like : <b>(</b>Tags contains \"A\"<b>)</b><b>or</b><b>(</b>Name endswith \"r\"<b>)</b>",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) id of the property zone"
												}
											]
										},
										"description": "If working on a space and asking for parent of type building, the result will be the building of the space."
									},
									"response": [
										{
											"name": "List of parents of any property zone matching type of zone",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zone/parents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"zone",
														"parents",
														":id"
													],
													"query": [
														{
															"key": "parentsType",
															"value": "Area",
															"disabled": true
														},
														{
															"key": "filter",
															"value": "Name endswith \"xyz\"",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"iconFillColor\": \"string\",\n  \"templateId\": \"string\",\n  \"propertyZoneType\": \"Property\",\n  \"type\": \"Physical\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "returns the children of any property zone instance filtering on the type of the children",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zone/children/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"zone",
												"children",
												":id"
											],
											"query": [
												{
													"key": "childrenType",
													"value": "Area",
													"description": "type of children",
													"disabled": true
												},
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "<br>Contains search pattern to produce the list. If no set all items will be returned.\r\n<br></br>\r\n            Filter can look like : \r\n            <ul>Name contains \"A\"</ul><ul>Name = \"A\"</ul><ul>Name startswith \"A\"</ul><ul>Name endswith \"A\"</ul><ul>Tags contains \"A\"</ul><br>And/Or can be used to generate complex query like : <b>(</b>Tags contains \"A\"<b>)</b><b>or</b><b>(</b>Name endswith \"r\"<b>)</b>",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) id of the property zone"
												}
											]
										},
										"description": "returns the children of any property zone instance filtering on the type of the children"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zone/children/:id?childrenType=Area&filter=Name endswith \"xyz\"",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"zone",
														"children",
														":id"
													],
													"query": [
														{
															"key": "childrenType",
															"value": "Area"
														},
														{
															"key": "filter",
															"value": "Name endswith \"xyz\""
														}
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"iconFillColor\": \"string\",\n  \"templateId\": \"string\",\n  \"propertyZoneType\": \"Property\",\n  \"type\": \"Physical\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Returns the detail information of a generic zone",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zone/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"zone",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the zone instance"
												}
											]
										},
										"description": "All ontology property, building, structure, space, area are considered as generic zone in openBOS\r\nThis resource path allows to query detail of a generic zone.\r\n\r\nThe difference with the data retrieved via property, space, area from ontology is that generic zone will not contain the ontology decorator like the resource path to get the children space or to get the alarms"
									},
									"response": [
										{
											"name": "List of zone instances matching the filter criteria",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zone/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"zone",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"functionalBlocks\": [\n  {\n   \"group\": \"string\",\n   \"functionalBlockId\": \"string\",\n   \"masterMode\": \"None\",\n   \"inZone\": true\n  }\n ],\n \"name\": \"string\",\n \"parentIds\": [\n  \"string\"\n ],\n \"type\": \"Physical\",\n \"childrenIds\": [\n  \"string\"\n ],\n \"templateId\": \"string\",\n \"id\": \"string\",\n \"authorized\": true,\n \"datapoints\": [\n  {\n   \"networkId\": \"string\",\n   \"protocolArguments\": {},\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"typeId\": \"string\",\n   \"converterId\": \"string\",\n   \"jobmask\": 0,\n   \"tags\": [\n    \"string\"\n   ],\n   \"busUnitId\": \"string\",\n   \"zoneId\": \"string\",\n   \"stationId\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"propertyZoneType\": \"Property\",\n \"iconFillColor\": \"string\",\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"roleId\": \"string\",\n   \"jobmask\": 0,\n   \"userId\": \"string\",\n   \"value\": {},\n   \"zoneId\": \"string\",\n   \"isOverride\": true,\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"tags\": [\n  \"string\"\n ],\n \"icon\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "physicaldevice",
							"item": [
								{
									"name": "/gateway/{gwid}/api/v1/ontology/physicaldevice - GET",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/physicaldevice",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"physicaldevice"
											],
											"query": [
												{
													"key": "networkId",
													"value": "networkId",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/physicaldevice",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"physicaldevice"
													],
													"query": [
														{
															"key": "networkId",
															"value": "networkId",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"deviceInstanceId\": \"string\",\n  \"networkId\": \"string\",\n  \"name\": \"string\",\n  \"protocolArguments\": {},\n  \"assignationCounter\": 0,\n  \"manual\": true,\n  \"networkOrganizationBranchId\": \"string\",\n  \"deviceTemplateId\": \"string\",\n  \"id\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get a physical device detail by id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/physicaldevice/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"physicaldevice",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										},
										"description": "Get a physical device detail by id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/physicaldevice/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"physicaldevice",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"deviceInstanceId\": \"string\",\n \"networkId\": \"string\",\n \"name\": \"string\",\n \"protocolArguments\": {},\n \"assignationCounter\": 0,\n \"manual\": true,\n \"networkOrganizationBranchId\": \"string\",\n \"deviceTemplateId\": \"string\",\n \"id\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "deviceinstance",
							"item": [
								{
									"name": "Get the list of device instance available in the system",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/deviceinstance",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"deviceinstance"
											],
											"query": [
												{
													"key": "networkId",
													"value": "networkId",
													"description": "Id of the network you want the devices. null for all",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get the list of device instance available in the system"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/deviceinstance",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"deviceinstance"
													],
													"query": [
														{
															"key": "networkId",
															"value": "networkId",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"networkId\": \"string\",\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"physicalDeviceId\": \"string\",\n  \"deviceTemplateId\": \"string\",\n  \"id\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get a device instance detail by id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/deviceinstance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"deviceinstance",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										},
										"description": "Get a device instance detail by id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/deviceinstance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"deviceinstance",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"networkId\": \"string\",\n \"protocolArguments\": {},\n \"name\": \"string\",\n \"functionalBlockInstances\": [\n  \"string\"\n ],\n \"tags\": [\n  \"string\"\n ],\n \"physicalDeviceId\": \"string\",\n \"id\": \"string\",\n \"deviceTemplateId\": \"string\",\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"roleId\": \"string\",\n   \"jobmask\": 0,\n   \"userId\": \"string\",\n   \"value\": {},\n   \"zoneId\": \"string\",\n   \"isOverride\": true,\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "functionalblock",
							"item": [
								{
									"name": "Get a list of functional block instance available in the system",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/functionalblock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"functionalblock"
											],
											"query": [
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "Filter criteria to limit the retrieved items (ie: Name contains \"ABC\" and Tags contains \"meeting\")",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Logged user must have a correct job mask and have access to at least one parent zone of the functional block"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/functionalblock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"functionalblock"
													],
													"query": [
														{
															"key": "filter",
															"value": "Name endswith \"xyz\"",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"deviceInstanceId\": \"string\",\n  \"name\": \"string\",\n  \"deviceFunctionalBlockTemplateId\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"assignationDone\": true,\n  \"specializationId\": \"string\",\n  \"specializationType\": \"string\",\n  \"templateId\": \"string\",\n  \"iconFillColor\": \"string\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get an existing functional block instance detail",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/functionalblock/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"functionalblock",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the functional block instance object"
												}
											]
										},
										"description": "Logged user must have a correct job mask and have access to at least one parent zone of the functional block"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/functionalblock/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"functionalblock",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"deviceInstanceId\": \"string\",\n \"name\": \"string\",\n \"deviceFunctionalBlockTemplateId\": \"string\",\n \"tags\": [\n  \"string\"\n ],\n \"assignationDone\": true,\n \"jobmask\": 0,\n \"templateId\": \"string\",\n \"specializationId\": \"string\",\n \"id\": \"string\",\n \"zones\": [\n  {\n   \"inZone\": true,\n   \"zoneId\": \"string\"\n  }\n ],\n \"specializationType\": \"string\",\n \"jobmaskIds\": [\n  \"string\"\n ],\n \"master\": true,\n \"datapoints\": [\n  {\n   \"networkId\": \"string\",\n   \"protocolArguments\": {},\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"typeId\": \"string\",\n   \"converterId\": \"string\",\n   \"jobmask\": 0,\n   \"tags\": [\n    \"string\"\n   ],\n   \"busUnitId\": \"string\",\n   \"zoneId\": \"string\",\n   \"stationId\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"iconFillColor\": \"string\",\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"name\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"roleId\": \"string\",\n   \"jobmask\": 0,\n   \"userId\": \"string\",\n   \"value\": {},\n   \"zoneId\": \"string\",\n   \"isOverride\": true,\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"functionalBlockId\": \"string\",\n   \"templateId\": \"string\",\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\"\n  }\n ],\n \"icon\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "datapoint",
							"item": [
								{
									"name": "datatype",
									"item": [
										{
											"name": "Get the list of available data type present in the entire project",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datatype",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datatype"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														}
													]
												},
												"description": "<br>Each value has a datatype including unit, min, max, limit, possible value if any...\r\n<br>That resource path returns the catalogue of the entire datatypes available in the project depening on the transport in the edge (the protocols).\r\n<br>Detailled information on a datatype can be found by using the datatype resource path including its unique id (ie: .../datatype/{id} )"
											},
											"response": [
												{
													"name": "Retrieves the list of data type basics information",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datatype",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"datatype"
															],
															"variable": [
																{
																	"key": "gwid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"type\": \"do dolore aliquip ullamco minim\",\n  \"tag\": \"ut\",\n  \"id\": \"Duis ut\",\n  \"transport\": \"BACnet\",\n  \"name\": \"nisi sit laboris anim\"\n },\n {\n  \"type\": \"consectetur ex in sit et\",\n  \"tag\": \"cupidatat non eiusmod\",\n  \"id\": \"officia in exercitation Duis\",\n  \"transport\": \"Lonworks\",\n  \"name\": \"dolor in id dolor\"\n }\n]"
												}
											]
										},
										{
											"name": "Get the list of available data type for a given transport",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datatype/transport?transport=BACnet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datatype",
														"transport"
													],
													"query": [
														{
															"key": "transport",
															"value": "BACnet",
															"description": "The filtered transport for datatypes"
														}
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														}
													]
												},
												"description": "<br>A transport is a protocol. That resource path returns the list of available datatypes in a network.\r\n<br>You can state the network you want giving the correct protocol as a parameter\r\n<br>(BACnet, KNXRouting, KNXTunneling, Lonworks, ModbusSerial, ModbusIP, MBus, xDriver, Memory)"
											},
											"response": [
												{
													"name": "Retrieves the list of data type basics information matching transport criteria",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datatype/transport?transport=BACnet",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"datatype",
																"transport"
															],
															"query": [
																{
																	"key": "transport",
																	"value": "BACnet"
																}
															],
															"variable": [
																{
																	"key": "gwid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"type\": \"do dolore aliquip ullamco minim\",\n  \"tag\": \"ut\",\n  \"id\": \"Duis ut\",\n  \"transport\": \"BACnet\",\n  \"name\": \"nisi sit laboris anim\"\n },\n {\n  \"type\": \"consectetur ex in sit et\",\n  \"tag\": \"cupidatat non eiusmod\",\n  \"id\": \"officia in exercitation Duis\",\n  \"transport\": \"Lonworks\",\n  \"name\": \"dolor in id dolor\"\n }\n]"
												}
											]
										},
										{
											"name": "Get the detail of a DataType of the project.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datatype/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datatype",
														":id"
													],
													"query": [
														{
															"key": "desiredunit",
															"value": "unitId",
															"description": "Id of the desired unit for numeric min/max. If not present will use the unit of the datatype",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Unique identifier of the data type object"
														}
													]
												},
												"description": "<br>A DataType can be of type Long, Double, Bool, String, Enumeration, Complex, DateTime, Duration, IP address, IP address + port, Byte, Array Of one of preceding dataType.\r\n<br>That resource path needs the ID of the datatype and returns the details\r\n<br>Detail of a dataType may for example gives the autorized min / max value of a Long or Double value or give the list of valid enumeration."
											},
											"response": [
												{
													"name": "Detailled information of a specific datatype.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datatype/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"datatype",
																":id"
															],
															"query": [
																{
																	"key": "desiredunit",
																	"value": "unitId",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"type\": \"occaecat\",\n \"tag\": \"pariatur sint exercitation laboris\",\n \"id\": \"et est cillum laboris\",\n \"transport\": \"MBus\",\n \"name\": \"anim ullamco\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "unit",
									"item": [
										{
											"name": "List of units available in openBOS",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/unit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"unit"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														}
													]
												},
												"description": "<br>openBOS offers predefined unit for interoperability reasons. That resource path sends back the units managed by openBOS.\r\n<br>For more information on a unit use the unit resource path with the ID of the unit."
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/unit",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"unit"
															],
															"variable": [
																{
																	"key": "gwid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"category\": \"string\",\n  \"preferredMin\": 0,\n  \"displayName\": \"string\",\n  \"preferredMax\": 0,\n  \"unitShortString\": \"string\",\n  \"resolution\": 0\n }\n]"
												}
											]
										},
										{
											"name": "Get the detail of a specific unit.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/unit/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"unit",
														":id"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Unique identifier of the unit"
														}
													]
												},
												"description": "Get the detail of a specific unit defined by its ID: name, esolution, category, prefered min and prefered max"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/unit/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"unit",
																":id"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"category\": \"string\",\n \"preferredMin\": 0,\n \"displayName\": \"string\",\n \"preferredMax\": 0,\n \"unitShortString\": \"string\",\n \"resolution\": 0\n}"
												}
											]
										},
										{
											"name": "perform a convertion between 2 units",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "0"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/unit/converter",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"unit",
														"converter"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														}
													]
												},
												"description": "<br>Units may not be one to one compatible and you may need to perform a conversion to move from unit 1 to unit 2.\r\n<br>That resource path may be used to perform that action."
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "0"
														},
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/unit/converter",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"unit",
																"converter"
															],
															"variable": [
																{
																	"key": "gwid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get a list of datapoint instances for a given datapoint template Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapoint/template/:datapointTemplateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"datapoint",
												"template",
												":datapointTemplateId"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "datapointTemplateId",
													"value": "",
													"description": "(Required) the id of the Datapoint Template"
												}
											]
										},
										"description": "Logged user must have a correct job mask and have access to at least one parent zone of the functional block of the datapoint"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapoint/template/:datapointTemplateId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datapoint",
														"template",
														":datapointTemplateId"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "datapointTemplateId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"networkId\": \"string\",\n  \"protocolArguments\": {},\n  \"direction\": \"Feedback\",\n  \"name\": \"string\",\n  \"typeId\": \"string\",\n  \"converterId\": \"string\",\n  \"jobmask\": 0,\n  \"tags\": [\n   \"string\"\n  ],\n  \"busUnitId\": \"string\",\n  \"zoneId\": \"string\",\n  \"stationId\": \"string\",\n  \"jobmaskIds\": [\n   \"string\"\n  ],\n  \"functionalBlockId\": \"string\",\n  \"templateId\": \"string\",\n  \"displayUnitId\": \"string\",\n  \"id\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get an existing datapoint instance",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapoint/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"datapoint",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the data point"
												}
											]
										},
										"description": "Get an existing datapoint instance"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapoint/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datapoint",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"networkId\": \"string\",\n \"protocolArguments\": {},\n \"direction\": \"Feedback\",\n \"name\": \"string\",\n \"typeId\": \"string\",\n \"converterId\": \"string\",\n \"jobmask\": 0,\n \"tags\": [\n  \"string\"\n ],\n \"busUnitId\": \"string\",\n \"zoneId\": \"string\",\n \"stationId\": \"string\",\n \"jobmaskIds\": [\n  \"string\"\n ],\n \"functionalBlockId\": \"string\",\n \"templateId\": \"string\",\n \"displayUnitId\": \"string\",\n \"id\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get a list of all tags",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/tag",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gateway",
										":gwid",
										"api",
										"v1",
										"ontology",
										"tag"
									],
									"variable": [
										{
											"key": "gwid",
											"value": "{{gwid}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get a list of all tags"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
												"key": "Authorization",
												"value": "consectetur minim ex Duis"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/tag",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"tag"
											],
											"variable": [
												{
													"key": "gwid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n \"string\"\n]"
								}
							]
						},
						{
							"name": "File resources of ontology",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/resources/Shutter.svg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gateway",
										":gwid",
										"api",
										"v1",
										"ontology",
										"resources",
										"Shutter.svg"
									],
									"variable": [
										{
											"key": "gwid",
											"value": "{{gwid}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
												"key": "Authorization",
												"value": "consectetur minim ex Duis"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/resources/*",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"resources",
												"*"
											],
											"variable": [
												{
													"key": "gwid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Templates",
					"item": [
						{
							"name": "devicetemplate",
							"item": [
								{
									"name": "Get the device templates defined in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/devicetemplate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"devicetemplate"
											],
											"query": [
												{
													"key": "driverDescriptorId",
													"value": "consectetur minim ex Duis",
													"description": "Filter criteria to limit the retrieved device template to a specific protocol driver",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>Device template is the description of a model of a manufacturer device, including its protocol arguments with list of Functional Blocks, DataPoints.\r\n<br></br>\r\n<br>This resource path returns the list of device template."
									},
									"response": [
										{
											"name": "Basics information of matching device templates",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/devicetemplate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"devicetemplate"
													],
													"query": [
														{
															"key": "driverDescriptorId",
															"value": "consectetur minim ex Duis",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"instancesCount\": 0,\n  \"productReference\": \"string\",\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"version\": \"string\",\n  \"driverDescriptorId\": \"string\",\n  \"icon\": \"string\",\n  \"id\": \"string\",\n  \"firmwareVersion\": \"string\",\n  \"manufacturer\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get a detail information of a device template",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/devicetemplate/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"devicetemplate",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the requested device template"
												}
											]
										},
										"description": "<br>Device template is the description of a model of a manufacturer device, including its protcol arguments with list of Functional Blocks, DataPoints.\r\n<br></br>\r\n<br>This resource path return the detail information of a device template"
									},
									"response": [
										{
											"name": "Successfully retrieves the device template detail",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/devicetemplate/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"devicetemplate",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"protocolArguments\": {},\n \"instancesCount\": 0,\n \"productReference\": \"string\",\n \"name\": \"string\",\n \"functionalBlocks\": [\n  {\n   \"functionalBlockTemplateId\": \"string\",\n   \"datapoints\": [\n    {\n     \"converterId\": \"string\",\n     \"protocolArguments\": {},\n     \"datapointTemplateId\": \"string\",\n     \"busUnit\": \"string\"\n    }\n   ],\n   \"id\": \"string\",\n   \"name\": \"string\"\n  }\n ],\n \"tags\": [\n  \"string\"\n ],\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"publicId\": \"string\",\n   \"description\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"jobmask\": 0,\n   \"id\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"displayUnitId\": \"string\",\n   \"defaultValue\": {},\n   \"name\": \"string\"\n  }\n ],\n \"version\": \"string\",\n \"driverDescriptorId\": \"string\",\n \"manufacturer\": \"string\",\n \"id\": \"string\",\n \"firmwareVersion\": \"string\",\n \"icon\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "zonetemplate",
							"item": [
								{
									"name": "Get the zone templates defined in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zonetemplate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"zonetemplate"
											],
											"query": [
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "Filter criteria to limit the retrieved zone template (ie: Name contains \"ABC\" and Tags contains \"meeting\")",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>All zones in the openBOS are based on a zone template. A zone template defines the list of functional block that can be present in the zone, as the list of datapoint that are directly present in the zone.\r\n<br></br>\r\n<br>This resource path returns the list of zone templates available in the project."
									},
									"response": [
										{
											"name": "Basics information of matching zone templates",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zonetemplate?filter=Name endswith \"xyz\"",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"zonetemplate"
													],
													"query": [
														{
															"key": "filter",
															"value": "Name endswith \"xyz\""
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"instancesCount\": 0,\n  \"publicId\": \"string\",\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"version\": \"string\",\n  \"parentId\": \"string\",\n  \"iconFillColor\": \"string\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get the detail of a zone template defined in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zonetemplate/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"zonetemplate",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the requested zone template"
												}
											]
										},
										"description": "<br>All zones in the openBOS are based on a zone template. A zone template defines the list of functional block that can be present in the zone, as the list of datapoint that are directly present in the zone.\r\n<br></br>\r\n<br>This resource path returns detail of a specific zone template."
									},
									"response": [
										{
											"name": "Basics information of matching zone templates",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/zonetemplate/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"zonetemplate",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"usages\": [\n  \"string\"\n ],\n \"instancesCount\": 0,\n \"publicId\": \"string\",\n \"mandatoryFunctionalBlocks\": [\n  \"string\"\n ],\n \"tags\": [\n  \"string\"\n ],\n \"parentId\": \"string\",\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"publicId\": \"string\",\n   \"description\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"jobmask\": 0,\n   \"id\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"displayUnitId\": \"string\",\n   \"defaultValue\": {},\n   \"name\": \"string\"\n  }\n ],\n \"version\": \"string\",\n \"optionalFunctionalBlocks\": [\n  \"string\"\n ],\n \"datapoints\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"publicId\": \"string\",\n   \"description\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"jobmask\": 0,\n   \"busUnitId\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\",\n   \"name\": \"string\"\n  }\n ],\n \"id\": \"string\",\n \"icon\": \"string\",\n \"iconFillColor\": \"string\",\n \"supportAllFunctionalBlocks\": true,\n \"name\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "functionalblocktemplate",
							"item": [
								{
									"name": "Get the list of asset's template in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/functionalblocktemplate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"functionalblocktemplate"
											],
											"query": [
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "<br>Contains search pattern to produce the list. If no set all items will be returned.\r\n<br></br>\r\n            Filter can look like : \r\n            <ul>Name contains \"A\"</ul><ul>Name = \"A\"</ul><ul>Name startswith \"A\"</ul><ul>Name endswith \"A\"</ul><ul>Tags contains \"A\"</ul><br>And/Or can be used to generate complex query like : <b>(</b>Tags contains \"A\"<b>)</b><b>or</b><b>(</b>Name endswith \"r\"<b>)</b>",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>openBOS manages assets in the building (lamp, button, fancoil, ...).\r\n<br>Every asset refer to a template and are all instances of an asset template. (i.e. Each lamp is an instance of a lamp template.)\r\n<br>That resource path returns the complete list of asset template in the building.\r\n<br>From here you retrieve only the basic information of each template.\r\n<br>To collect the detailed information on a specific asset template you will need to use the dedicated endpoint by using the unique identifier of the entity (/api/v1/ontology/{entity}/{id})."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/functionalblocktemplate?filter=Name endswith \"xyz\"",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"functionalblocktemplate"
													],
													"query": [
														{
															"key": "filter",
															"value": "Name endswith \"xyz\""
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"instancesCount\": 0,\n  \"publicId\": \"string\",\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"version\": \"string\",\n  \"parentId\": \"string\",\n  \"iconFillColor\": \"string\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get the detail of an asset template of the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/functionalblocktemplate/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"functionalblocktemplate",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>openBOS manages assets in the building (lamp, button, fancoil, ...).\r\n<br>Every asset refer to a template and are all instances of an asset template. (i.e. Each lamp is an instance of a lamp template.)\r\n<br>Here retrieve the detailed information of an asset template by its unique identifier.\r\n<br>The detail will give information like possible configuration values that you will find on the asset instances that are based on the current asset template."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/functionalblocktemplate/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"functionalblocktemplate",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"usages\": [\n  \"string\"\n ],\n \"instancesCount\": 0,\n \"publicId\": \"string\",\n \"name\": \"string\",\n \"tags\": [\n  \"string\"\n ],\n \"supportMasterSlave\": true,\n \"parentId\": \"string\",\n \"properties\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"publicId\": \"string\",\n   \"description\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"jobmask\": 0,\n   \"id\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"displayUnitId\": \"string\",\n   \"defaultValue\": {},\n   \"name\": \"string\"\n  }\n ],\n \"jobmaskIds\": [\n  \"string\"\n ],\n \"version\": \"string\",\n \"datapoints\": [\n  {\n   \"typeId\": \"string\",\n   \"direction\": \"Feedback\",\n   \"publicId\": \"string\",\n   \"description\": \"string\",\n   \"tags\": [\n    \"string\"\n   ],\n   \"jobmask\": 0,\n   \"busUnitId\": \"string\",\n   \"jobmaskIds\": [\n    \"string\"\n   ],\n   \"displayUnitId\": \"string\",\n   \"id\": \"string\",\n   \"name\": \"string\"\n  }\n ],\n \"id\": \"string\",\n \"iconFillColor\": \"string\",\n \"jobmask\": 0,\n \"icon\": \"string\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "user",
							"item": [
								{
									"name": "Returns users of a certain type for a certain property zone",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"user"
											],
											"query": [
												{
													"key": "type",
													"value": "Visitor",
													"description": "Type of requested users",
													"disabled": true
												},
												{
													"key": "zoneId",
													"value": "",
													"description": "Id of the parent property zone",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "This resource path retrieves the basics information of users matching a criteria.\r\n<br>openBOS offers several type of users and you may have differences in roles, agreements, … between these types of users.<br>We are managing: Tenant, Owner, PropertyManager, FacilityManager, Visitor and Administrator.<br></br>\r\n\r\nConnected user must have at least CanConfigureUser access right to retrieve more users than himself."
									},
									"response": [
										{
											"name": "List of basics information of users matching the criteria.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/user",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"user"
													],
													"query": [
														{
															"key": "type",
															"value": "Visitor",
															"disabled": true
														},
														{
															"key": "zoneId",
															"value": "consectetur minim ex Duis",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"isReadonly\": true,\n  \"email\": \"string\",\n  \"icon\": \"string\",\n  \"id\": \"string\",\n  \"initials\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get detail of a specific user",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the user"
												}
											]
										},
										"description": "This resource path retrieves detailed information of a user identified by its unique identifier\r\n<br></br><br>openBOS offers several type of users having different roles, agreements, … between these types of users.\r\n\r\nConnected user must have at least CanConfigureUser access right and same root role as the requested user to use this method on a user different than himself."
									},
									"response": [
										{
											"name": "Retrieve detailed information of found users.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"authenticationProviderId\": \"string\",\n \"preferences\": {},\n \"firstname\": \"string\",\n \"tags\": [\n  \"string\"\n ],\n \"isReadonly\": true,\n \"lastname\": \"string\",\n \"company\": \"string\",\n \"cloudRegistrationStatus\": \"None\",\n \"accessRights\": [\n  \"string\"\n ],\n \"phone\": \"string\",\n \"email\": \"string\",\n \"active\": true,\n \"roleIds\": [\n  \"string\"\n ],\n \"initials\": \"string\",\n \"hasAccessFromCloud\": true,\n \"id\": \"string\",\n \"icon\": \"string\",\n \"name\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "role",
							"item": [
								{
									"name": "Get the roles available in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/role",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"role"
											],
											"query": [
												{
													"key": "filter",
													"value": "Name endswith \"xyz\"",
													"description": "<br>Contains search pattern to produce the list. If no set all roles will be returned.\r\n<br></br>\r\n            Filter can look like : \r\n            <ul>Name contains \"A\"</ul><ul>Name = \"A\"</ul><ul>Name startswith \"A\"</ul><ul>Name endswith \"A\"</ul><ul>Tags contains \"A\"</ul><br>And/Or can be used to generate complex query like : <b>(</b>Tags contains \"A\"<b>)</b><b>or</b><b>(</b>Name endswith \"r\"<b>)</b>",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "This resource path retrieves the list of roles a user can be assigned to.\r\n<br></br><b>openBOS</b> uses a Role Based Access Control system. Each user can be assigned to one or several Role. Each role being configured with access rights and topology accessibility (limit to certain zones)"
									},
									"response": [
										{
											"name": "List of roles matching the filter criteria.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/role",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"role"
													],
													"query": [
														{
															"key": "filter",
															"value": "Name endswith \"xyz\"",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"string\",\n  \"tags\": [\n   \"string\"\n  ],\n  \"overrideZones\": \"Inherit\",\n  \"jobMask\": 0,\n  \"accessRights\": [\n   \"string\"\n  ],\n  \"isReadonly\": true,\n  \"jobmaskIds\": [\n   \"string\"\n  ],\n  \"notVisibleInCloudMicroSite\": true,\n  \"parentId\": \"string\",\n  \"zoneInstanceIds\": [\n   \"string\"\n  ],\n  \"overrideRights\": \"Inherit\",\n  \"id\": \"string\",\n  \"icon\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get a specific role",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique id of the requested role"
												}
											]
										},
										"description": "This resource path retrieves a specific role by its unique identifier.\r\n<br></br><b>openBOS</b> uses a Role Based Access Control system. Each user can be assigned to one or several Role. Each role being configured with access rights and topology accessibility (limit to certain zones)"
									},
									"response": [
										{
											"name": "The matching role.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/role/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"role",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"string\",\n \"tags\": [\n  \"string\"\n ],\n \"overrideZones\": \"Inherit\",\n \"jobMask\": 0,\n \"accessRights\": [\n  \"string\"\n ],\n \"isReadonly\": true,\n \"jobmaskIds\": [\n  \"string\"\n ],\n \"notVisibleInCloudMicroSite\": true,\n \"parentId\": \"string\",\n \"zoneInstanceIds\": [\n  \"string\"\n ],\n \"overrideRights\": \"Inherit\",\n \"id\": \"string\",\n \"icon\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "jobmask",
							"item": [
								{
									"name": "Get the list of the jobmasks in the project.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/jobmask",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"jobmask"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "This resource path retrieves the list of jobmasks inside the project.\r\n<br></br><br>Users have jobmasks meaning a family of users they belong. Objects may or may not be available depending on jobmasks parameters.<br>For example with a jobmask Electrical Installer you may not access to the HVAC components.<br></br><br>Jobmasks descriptions are defined by administrator in <b>openBOS</b>.<br>\r\nFor more information on the jobmask use the resource path jobmask with the ID of the jobMask\r\n"
									},
									"response": [
										{
											"name": "List of jobmasks",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/jobmask",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"jobmask"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"mask\": 0,\n  \"id\": \"string\",\n  \"name\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get detailled information on a specific jobmask",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/jobmask/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"jobmask",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the jobmask"
												}
											]
										},
										"description": "This resource path retrieves detailled information on a specific jobmask.\r\n<br></br><br>Users have jobmasks meaning a family of users they belong. Objects may or may not be available depending on jobmasks parameters.<br>For example with a jobmask Electrical Installer you may not access to the HVAC components.<br></para><para>Jobmasks descriptions are defined by administrator in <b>openBOS</b>."
									},
									"response": [
										{
											"name": "The detailled information of the jobmask",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/jobmask/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"jobmask",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"mask\": 0,\n \"id\": \"string\",\n \"name\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all available access rights",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/accessright",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gateway",
										":gwid",
										"api",
										"v1",
										"ontology",
										"accessright"
									],
									"variable": [
										{
											"key": "gwid",
											"value": "{{gwid}}",
											"description": "(Required) "
										}
									]
								},
								"description": "This resource path retrieves the list of access right that can be set to a role in an openBOS project\r\n\r\n<br>openBOS uses a role base access control system.<br>Each user being linked to role, each role having permissions.<br>The access rights are one of these possible permissions authorized for a role."
							},
							"response": [
								{
									"name": "List of available AccessRights",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
												"key": "Authorization",
												"value": "consectetur minim ex Duis"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/accessright",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"accessright"
											],
											"variable": [
												{
													"key": "gwid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"code\": \"string\",\n  \"description\": \"string\",\n  \"name\": \"string\"\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Trends and Alarms",
					"item": [
						{
							"name": "alarmtemplate",
							"item": [
								{
									"name": "Get the list of alarm templates in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmtemplate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"alarmtemplate"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>An alarm template is used to create several alarm instances that will have the same behaviour on a set of DataPointInstance\r\n<br>The alarm template describes the alarm triggers, and the selection of DataPoint on which the alarm template will applied\r\n<br>The selection of datapointinstance can be a manual selection of individual datapointinstance or all datapoint instances matching a datapoint template inside a zone or functional block\r\n<br></br>\r\n<br>This resource path returns the list of alarm templates that are configured within the project"
									},
									"response": [
										{
											"name": "Retrieves the list of alarm template basics information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmtemplate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"alarmtemplate"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Find alarm templates matching an advanced criteria",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmtemplate/advanced",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"alarmtemplate",
												"advanced"
											],
											"query": [
												{
													"key": "alarmTemplateId",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the ID of the alarm template",
													"disabled": true
												},
												{
													"key": "alarmTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the alarm template",
													"disabled": true
												},
												{
													"key": "zoneTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the zone template",
													"disabled": true
												},
												{
													"key": "functionalBlockTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the functional block template",
													"disabled": true
												},
												{
													"key": "datapointTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the datapoint template",
													"disabled": true
												},
												{
													"key": "triggerTypes",
													"value": "enum",
													"description": "Filter for the type of the trigger",
													"disabled": true
												},
												{
													"key": "triggerSeverity",
													"value": "Critical",
													"description": "Filter for the severity of the trigger",
													"disabled": true
												},
												{
													"key": "needAcknowledge",
													"value": "true",
													"description": "Filter for the NeedAcknowledge of the alarm template",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>An alarm template is used to create several alarm instances that will have the same behaviour on a set of DataPointInstance\r\n<br>The alarm template describes the alarm triggers, and the selection of DataPoint on which the alarm template will applied\r\n<br></br>\r\n<br>This resource path returns the list of alarm templates that are matching the criteria in argument. (ie: alarm template name, zone template name to which it applies)"
									},
									"response": [
										{
											"name": "Retrieves the list of alarm template basics information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmtemplate/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"alarmtemplate",
														"advanced"
													],
													"query": [
														{
															"key": "alarmTemplateId",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "alarmTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "zoneTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "functionalBlockTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "datapointTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "triggerTypes",
															"value": "ut",
															"disabled": true
														},
														{
															"key": "triggerSeverity",
															"value": "Critical",
															"disabled": true
														},
														{
															"key": "needAcknowledge",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get an alarm template detail in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmtemplate/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"alarmtemplate",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>An alarm template is used to create several alarm instances that will have the same behaviour on a set of DataPointInstance\r\n<br>The alarm template describes the alarm triggers, and the selection of DataPoint on which the alarm template will applied\r\n<br></br>\r\n<br>This resource path returns the detail for an alarm template"
									},
									"response": [
										{
											"name": "Successfuly get the detail of an alarm template",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmtemplate/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"alarmtemplate",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get statistics on the number of alarms configured in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmtemplate/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"alarmtemplate",
												"count"
											],
											"query": [
												{
													"key": "alarmTemplateId",
													"value": "alarmtemplateId",
													"description": "Filter for the ID of the alarm template",
													"disabled": true
												},
												{
													"key": "alarmTemplateName",
													"value": "alarmTemplateName",
													"description": "Filter for the name of the alarm template",
													"disabled": true
												},
												{
													"key": "zoneTemplateName",
													"value": "zoneTemplateName",
													"description": "Filter for the name of the zone template",
													"disabled": true
												},
												{
													"key": "functionalBlockTemplateName",
													"value": "functionalBlockTemplateName",
													"description": "Filter for the name of the functional block template",
													"disabled": true
												},
												{
													"key": "datapointTemplateName",
													"value": "datapointTemplateName",
													"description": "Filter for the name of the datapoint template",
													"disabled": true
												},
												{
													"key": "triggerTypes",
													"value": "enim",
													"description": "Filter for the type of the trigger",
													"disabled": true
												},
												{
													"key": "triggerSeverity",
													"value": "Critical",
													"description": "Filter for the severity of the trigger",
													"disabled": true
												},
												{
													"key": "needAcknowledge",
													"value": "true",
													"description": "Filter for the NeedAcknowledge of the alarm template",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>An alarm template is used to create several alarm instances that will have the same behaviour on a set of DataPointInstance\r\n<br>The alarm template describes the alarm triggers, and the selection of DataPoint on which the alarm template will applied\r\n<br></br>\r\n<br>This resource path returns the detail for an alarm template"
									},
									"response": [
										{
											"name": "Retrieves the number of alarm template that matches the filter criteria",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmtemplate/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"alarmtemplate",
														"count"
													],
													"query": [
														{
															"key": "alarmTemplateId",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "alarmTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "zoneTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "functionalBlockTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "datapointTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "triggerTypes",
															"value": "nisi reprehenderit",
															"disabled": true
														},
														{
															"key": "triggerSeverity",
															"value": "Critical",
															"disabled": true
														},
														{
															"key": "needAcknowledge",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "alarm",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Subscribe to an alarm change.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"webhookRetryDelay\": 0,\n    \"webhookRetryCount\": 0,\n    \"tags\": [\n        \"string\"\n    ],\n    \"connectionId\": \"string\",\n    \"webhookURL\": \"string\",\n    \"alarmInstanceIds\": [\n        \"string\"\n    ],\n    \"id\": \"string\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarm/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"alarm",
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) "
														}
													]
												},
												"description": "Subscribe to an alarm change."
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"webhookRetryDelay\": 0,\n    \"webhookRetryCount\": 0,\n    \"tags\": [\n        \"string\"\n    ],\n    \"connectionId\": \"string\",\n    \"webhookURL\": \"string\",\n    \"alarmInstanceIds\": [\n        \"string\"\n    ],\n    \"id\": \"string\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarm/subscription/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"alarm",
																"subscription",
																":id"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "delete a subscription to an alarm change.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarm/subscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"alarm",
														"subscription",
														":id"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Id of the alarm"
														}
													]
												},
												"description": "delete a subscription to an alarm change."
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarm/subscription/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"alarm",
																"subscription",
																":id"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get the pending and live alarms",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/livealarms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"livealarms"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get the pending and live alarms"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/livealarms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"livealarms"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get alarm trend log data.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmhistorics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"alarmhistorics"
											],
											"query": [
												{
													"key": "ids",
													"value": "consectetur minim ex Duis",
													"description": "Null or a list of alarmInstance Id",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "consectetur minim ex Duis",
													"description": "Format - date-time (as date-time in RFC3339). Null or DateTime",
													"disabled": true
												},
												{
													"key": "endDate",
													"value": "consectetur minim ex Duis",
													"description": "Format - date-time (as date-time in RFC3339). Null or DateTime",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get alarm trend log data."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarmhistorics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"alarmhistorics"
													],
													"query": [
														{
															"key": "ids",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "startDate",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "endDate",
															"value": "consectetur minim ex Duis",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add a new subscription for live alarm notification",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"webhookRetryDelay\": 0,\n    \"webhookRetryCount\": 0,\n    \"tags\": [\n        \"string\"\n    ],\n    \"connectionId\": \"string\",\n    \"webhookURL\": \"string\",\n    \"alarmInstanceIds\": [\n        \"string\"\n    ],\n    \"id\": \"string\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarm/subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"alarm",
												"subscription"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>We propose an event driven mechanism to access the data changes. Instead of continuously reading a data you may subscribe to a value change.\r\n<br>That resource path is used to subscribe to an alarms of openBOS when it is triggered.\r\n<br>As soon as client has subscribed he will be able to receive the state change of alarms inside openBOS."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"webhookRetryDelay\": 0,\n    \"webhookRetryCount\": 0,\n    \"tags\": [\n        \"string\"\n    ],\n    \"connectionId\": \"string\",\n    \"webhookURL\": \"string\",\n    \"alarmInstanceIds\": [\n        \"string\"\n    ],\n    \"id\": \"string\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/alarm/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"alarm",
														"subscription"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "trendtemplate",
							"item": [
								{
									"name": "Get the list of trend templates in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trendtemplate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"trendtemplate"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>A trend template is used to create several trend instances that will have the same behaviour on a set of DataPointInstance\r\n<br>The selection of datapointinstance can be a manual selection of individual datapointinstance or all datapoint instances matching a datapoint template inside a zone or functional block\r\n<br></br>\r\n<br>This resource path returns the list of trend templates that are configured within the project"
									},
									"response": [
										{
											"name": "Retrieves the list of trend template basics information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trendtemplate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"trendtemplate"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"retentionPolicyId\": \"string\",\n  \"name\": \"string\",\n  \"datapointSelector\": {\n   \"id\": \"string\"\n  },\n  \"defaultColor\": \"string\",\n  \"display\": \"Curve\",\n  \"frequency\": 0,\n  \"needRefreshInstances\": true,\n  \"id\": \"string\",\n  \"deadband\": 0\n }\n]"
										}
									]
								},
								{
									"name": "Find trend templates matching an advanced criteria",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trendtemplate/advanced",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"trendtemplate",
												"advanced"
											],
											"query": [
												{
													"key": "trendTemplateId",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the ID of the trend template",
													"disabled": true
												},
												{
													"key": "trendTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the trend template",
													"disabled": true
												},
												{
													"key": "zoneTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the zone template",
													"disabled": true
												},
												{
													"key": "functionalBlockTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the functional block template",
													"disabled": true
												},
												{
													"key": "datapointTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the datapoint template",
													"disabled": true
												},
												{
													"key": "display",
													"value": "Line",
													"description": "Filter for the display",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>A trend template is used to create several trend instances that will have the same behaviour on a set of DataPointInstance\r\n<br>The selection of datapointinstance can be a manual selection of individual datapointinstance or all datapoint instances matching a datapoint template inside a zone or functional block\r\n<br></br>\r\n<br>This resource path returns the list of templates that are matching the criteria in argument. (ie: trend template name, zone template name to which it applies)"
									},
									"response": [
										{
											"name": "Retrieves the list of trend template basics information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trendtemplate/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"trendtemplate",
														"advanced"
													],
													"query": [
														{
															"key": "trendTemplateId",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "trendTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "zoneTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "functionalBlockTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "datapointTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "display",
															"value": "Line",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a trend template detail in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trendtemplate/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"trendtemplate",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>A trend template is used to create several trend instances that will have the same behaviour on a set of DataPointInstance\r\n<br>The selection of datapointinstance can be a manual selection of individual datapointinstance or all datapoint instances matching a datapoint template inside a zone or functional block\r\n<br></br>\r\n<br>This resource path returns the detail for an trend template"
									},
									"response": [
										{
											"name": "Successfuly get the detail of a trend template",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trendtemplate/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"trendtemplate",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get statistics on the number of trend instances configured in the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trendtemplate/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"trendtemplate",
												"count"
											],
											"query": [
												{
													"key": "trendTemplateId",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the ID of the trend template",
													"disabled": true
												},
												{
													"key": "trendTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the trend template",
													"disabled": true
												},
												{
													"key": "zoneTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the zone template",
													"disabled": true
												},
												{
													"key": "functionalBlockTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the functional block template",
													"disabled": true
												},
												{
													"key": "datapointTemplateName",
													"value": "consectetur minim ex Duis",
													"description": "Filter for the name of the datapoint template",
													"disabled": true
												},
												{
													"key": "display",
													"value": "Line",
													"description": "Filter for the display",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>A trend template is used to create several trend instances that will have the same behaviour on a set of DataPoint instance\r\n<br>The selection of datapointinstance can be a manual selection of individual datapoint instance or all datapoint instances matching a datapoint template inside a zone or functional block\r\n<br></br>\r\n<br>This resource path returns the count for an trend template"
									},
									"response": [
										{
											"name": "Retrieves the number of alarm template that matches the filter criteria",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trendtemplate/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"trendtemplate",
														"count"
													],
													"query": [
														{
															"key": "trendTemplateId",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "trendTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "zoneTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "functionalBlockTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "datapointTemplateName",
															"value": "consectetur minim ex Duis",
															"disabled": true
														},
														{
															"key": "display",
															"value": "Line",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "trend",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get a trend instance by id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trend/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"trend",
														":id"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Id of trend instance"
														}
													]
												},
												"description": "Get a trend instance by id"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trend/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"trend",
																":id"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"retentionPolicyId\": \"string\",\n \"defaultColor\": \"string\",\n \"display\": \"Curve\",\n \"active\": true,\n \"frequency\": 0,\n \"templateId\": \"string\",\n \"override\": true,\n \"datapointId\": \"string\",\n \"id\": \"string\",\n \"deadband\": 0\n}"
												}
											]
										},
										{
											"name": "Get trend values for an existing trend instance",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trend/:id/values?trendPeriodType=RealTime",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"trend",
														":id",
														"values"
													],
													"query": [
														{
															"key": "trendPeriodType",
															"value": "RealTime",
															"description": "Trend period to use for getting values"
														},
														{
															"key": "downSamplingId",
															"value": "",
															"description": "When trendPeriodType is set to DownSampling, the downSamplingId is required",
															"disabled": true
														},
														{
															"key": "from",
															"value": "",
															"description": "Format - date-time (as date-time in RFC3339). Inferior date criteria to filter data",
															"disabled": true
														},
														{
															"key": "to",
															"value": "",
															"description": "Format - date-time (as date-time in RFC3339). Superior date criteria to filter data",
															"disabled": true
														},
														{
															"key": "includeBorderPoints",
															"value": "false",
															"description": "Include the closest value just after before \"from\" and just after \"to\" criterias",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Unique identifier of the trend instance"
														}
													]
												},
												"description": "Get trend values for an existing trend instance"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trend/:id/values?trendPeriodType=RealTime&downSamplingId=consectetur minim ex Duis&from=consectetur minim ex Duis&to=consectetur minim ex Duis&includeBorderPoints=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"trend",
																":id",
																"values"
															],
															"query": [
																{
																	"key": "trendPeriodType",
																	"value": "RealTime"
																},
																{
																	"key": "downSamplingId",
																	"value": "consectetur minim ex Duis"
																},
																{
																	"key": "from",
																	"value": "consectetur minim ex Duis"
																},
																{
																	"key": "to",
																	"value": "consectetur minim ex Duis"
																},
																{
																	"key": "includeBorderPoints",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"downSamplingId\": \"string\",\n \"values\": [\n  {\n   \"totalPoints\": 0,\n   \"min\": 0,\n   \"max\": 0,\n   \"value\": {},\n   \"timeStamp\": \"string\",\n   \"quality\": \"Uncertain\"\n  }\n ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get retention policies",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/retention-policy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"retention-policy"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get retention policies"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/retention-policy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"retention-policy"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"duration\": \"string\",\n  \"downSamplingOptions\": [\n   {\n    \"functions\": \"TimeWeightedAverage\",\n    \"name\": \"string\",\n    \"alignTime\": \"string\",\n    \"groupedBy\": \"string\",\n    \"duration\": \"string\",\n    \"id\": \"string\"\n   }\n  ],\n  \"tags\": [\n   \"string\"\n  ],\n  \"id\": \"string\",\n  \"name\": \"string\"\n }\n]"
										}
									]
								},
								{
									"name": "Get number of trend instances",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trend/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"trend",
												"count"
											],
											"query": [
												{
													"key": "zoneName",
													"value": "xyz",
													"description": "Filter for the name of the zone instance",
													"disabled": true
												},
												{
													"key": "zoneTemplateName",
													"value": "xyz",
													"description": "Filter for the name of the zone template",
													"disabled": true
												},
												{
													"key": "zoneParentName",
													"value": "xyz",
													"description": "Filter for the name of the parent zone instance",
													"disabled": true
												},
												{
													"key": "functionalBlockName",
													"value": "xyz",
													"description": "Filter for the name of the functional block instance",
													"disabled": true
												},
												{
													"key": "functionalBlockTemplateName",
													"value": "xyz",
													"description": "Filter for the name of the functional block template",
													"disabled": true
												},
												{
													"key": "datapointName",
													"value": "xyz",
													"description": "Filter for the name of the datapoint instance",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get number of trend instances"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trend/count?zoneName=&zoneTemplateName=&zoneParentName=&functionalBlockName=&functionalBlockTemplateName=&datapointName=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"trend",
														"count"
													],
													"query": [
														{
															"key": "zoneName",
															"value": ""
														},
														{
															"key": "zoneTemplateName",
															"value": ""
														},
														{
															"key": "zoneParentName",
															"value": ""
														},
														{
															"key": "functionalBlockName",
															"value": ""
														},
														{
															"key": "functionalBlockTemplateName",
															"value": ""
														},
														{
															"key": "datapointName",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get list of trend instances with advanced datas",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trend/advanced",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"trend",
												"advanced"
											],
											"query": [
												{
													"key": "zoneName",
													"value": "xyz",
													"description": "Filter for the name of the zone instance",
													"disabled": true
												},
												{
													"key": "zoneTemplateName",
													"value": "xyz",
													"description": "Filter for the name of the zone template",
													"disabled": true
												},
												{
													"key": "zoneParentName",
													"value": "xyz",
													"description": "Filter for the name of the parent zone instance",
													"disabled": true
												},
												{
													"key": "functionalBlockName",
													"value": "xyz",
													"description": "Filter for the name of the functional block instance",
													"disabled": true
												},
												{
													"key": "functionalBlockTemplateName",
													"value": "xyz",
													"description": "Filter for the name of the functional block template",
													"disabled": true
												},
												{
													"key": "datapointName",
													"value": "xyz",
													"description": "Filter for the name of the datapoint instance",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get list of trend instances with advanced datas"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/trend/advanced?zoneName=consectetur minim ex Duis&zoneTemplateName=consectetur minim ex Duis&zoneParentName=consectetur minim ex Duis&functionalBlockName=consectetur minim ex Duis&functionalBlockTemplateName=consectetur minim ex Duis&datapointName=consectetur minim ex Duis",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"trend",
														"advanced"
													],
													"query": [
														{
															"key": "zoneName",
															"value": "consectetur minim ex Duis"
														},
														{
															"key": "zoneTemplateName",
															"value": "consectetur minim ex Duis"
														},
														{
															"key": "zoneParentName",
															"value": "consectetur minim ex Duis"
														},
														{
															"key": "functionalBlockName",
															"value": "consectetur minim ex Duis"
														},
														{
															"key": "functionalBlockTemplateName",
															"value": "consectetur minim ex Duis"
														},
														{
															"key": "datapointName",
															"value": "consectetur minim ex Duis"
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Edges and Fieldbuses",
					"item": [
						{
							"name": "station",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get detailled information for a specific station",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"station",
														":id"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Unique identifier of the requested middleware station"
														}
													]
												},
												"description": "<br>A station is an hardware embedding at least a middleware. That middleware may read several protocols and several networks. \r\n<br>That resource path returns the detailled information of a specific station in the project. "
											},
											"response": [
												{
													"name": "Retrieve detailled definition of the middleware station",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"station",
																":id"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"floorIds\": [\n  \"string\"\n ],\n \"networkIds\": [\n  \"string\"\n ],\n \"name\": \"string\",\n \"isLocal\": true,\n \"synchroPeriodAfterChange\": 0,\n \"needFullSynchro\": true,\n \"driverIds\": [\n  \"string\"\n ],\n \"reconnectionInterval\": \"string\",\n \"synchroPeriodAfterError\": 0,\n \"disabled\": true,\n \"hardwareLayoutId\": \"string\",\n \"trendRecentValueEventDateTime\": \"string\",\n \"reconnectionIntervalOnInternalError\": \"string\",\n \"address\": {\n  \"port\": 0,\n  \"address\": \"string\"\n },\n \"automaticSynchro\": true,\n \"trendLatestPurgeDateTime\": \"string\",\n \"id\": \"string\",\n \"stopAutomaticSynchroAfterErrors\": 0\n}"
												}
											]
										},
										{
											"name": "Get the list of available protocol driver in a specific Station",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station/:id/driver",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"station",
														":id",
														"driver"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Unique identifier of the station"
														}
													]
												},
												"description": "<br>A station is a hardware embeding at least a middleware.\r\n<br>That middleware may read several protocols.\r\n<br>Each protocol has a unique driver (i.e KNX) and may have several fieldbus networks of that protocol (several networks and database of the same protocol): The networks.\r\n<br>That resource path sends back the entire protocols supported by the Station . That may be used to read data from fieldbus.\r\n<br>For more information on a driver use the resource path .../station/{stationId}/driver/get/{id} with the ID of the driver."
											},
											"response": [
												{
													"name": "List of protocol driver definitions on the station.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station/:id/driver",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"station",
																":id",
																"driver"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"driverType\": \"Dll\",\n  \"name\": \"string\",\n  \"multiInstanceOnIP\": true,\n  \"company\": \"string\",\n  \"multiInstance\": true,\n  \"version\": \"string\",\n  \"groupByPort\": \"string\",\n  \"portType\": \"None\",\n  \"identifier\": \"string\",\n  \"id\": \"string\",\n  \"transport\": \"none\"\n }\n]"
												}
											]
										}
									]
								},
								{
									"name": "Get the list of stations inside the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"station"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>This resource path retrieves the basics information of station defined in the project.\r\n<br>A station is an hardware embedding at least a middleware. That middleware may read several protocols and several networks.\r\n<br>Detailled information on a station can be found by using station resource path including its unique id (ie: .../station/{id} )"
									},
									"response": [
										{
											"name": "Retrieve the list of station in the system with for each the basics information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"station"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"floorIds\": [\n   \"string\"\n  ],\n  \"networkIds\": [\n   \"string\"\n  ],\n  \"name\": \"string\",\n  \"isLocal\": true,\n  \"needFullSynchro\": true,\n  \"driverIds\": [\n   \"string\"\n  ],\n  \"reconnectionInterval\": \"string\",\n  \"synchroPeriodAfterError\": 0,\n  \"disabled\": true,\n  \"hardwareLayoutId\": \"string\",\n  \"reconnectionIntervalOnInternalError\": \"string\",\n  \"address\": {\n   \"port\": 0,\n   \"address\": \"string\"\n  },\n  \"automaticSynchro\": true,\n  \"synchroPeriodAfterChange\": 0,\n  \"id\": \"string\",\n  \"stopAutomaticSynchroAfterErrors\": 0\n }\n]"
										}
									]
								},
								{
									"name": "Forces an operation of synchronization on a specific station",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"clearMiddleware\": true,\n    \"stationId\": \"string\",\n    \"full\": true,\n    \"tag\": \"string\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station/synchro",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"station",
												"synchro"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>A station is an hardware embedding at least a middleware. That middleware may read several protocols and several networks. \r\n<br></br>\r\n<br>The synchronization is the operation of keeping in sync the openBOS and its underlying middleware. \r\n<br>Each time an update is done on openBOS that has impact on the middleware layer (used to communicate with fieldbus devices) a synchronization is required to align both definition.\r\n<br></br>\r\n<br>That routes forces an operation of synchronization on a specific station."
									},
									"response": [
										{
											"name": "Retrieves the unique identifier of the operation (tag). This tag must be passed, later on, to the synchronization status resource path to get the advancement of the operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clearMiddleware\": true,\n    \"stationId\": \"string\",\n    \"full\": true,\n    \"tag\": \"string\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station/synchro",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"station",
														"synchro"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"clearMiddleware\": true,\n \"stationId\": \"string\",\n \"full\": true,\n \"tag\": \"string\"\n}"
										}
									]
								},
								{
									"name": "Get the detail of a specific protocol driver on a station",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station/:stationId/driver/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"station",
												":stationId",
												"driver",
												":id"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												},
												{
													"key": "stationId",
													"value": "",
													"description": "(Required) Unique identifier of the station"
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) Unique identifier of the driver"
												}
											]
										},
										"description": "<br>A station is a hardware embeding at least a middleware.\r\n<br>That middleware may read several protocols. Each protocol has a unique driver (i.e KNX) and may have several fieldbus networks of that protocol (several networks and database of the same protocol): the networks.\r\n<br>Each fieldbus is accessible through a dedicated driver, this command retrieve the detail of a driver. \r\n<br>The driver detail contains the list of configuration values used to communicate with the fieldbus device of the protocol.\r\n<br>The list of configuration is dependant from the driver itself (ie: the configuration used for a ModBus communication is different from the configuration used for a BACNet communication."
									},
									"response": [
										{
											"name": "Protocol driver definitions on the station.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/station/:stationId/driver/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"station",
														":stationId",
														"driver",
														":id"
													],
													"variable": [
														{
															"key": "gwid"
														},
														{
															"key": "stationId"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"driverType\": \"Dll\",\n \"protocolArguments\": [\n  {\n   \"description\": \"veniam\",\n   \"defaultValue\": {},\n   \"mandatories\": \"DeviceTemplate\",\n   \"levels\": \"All\",\n   \"key\": \"tempor\",\n   \"type\": {\n    \"type\": \"cillum\",\n    \"tag\": \"officia reprehenderit enim qui\",\n    \"id\": \"deserunt magna Duis in\",\n    \"transport\": \"MBus\",\n    \"name\": \"cillum magna nulla laborum aliquip\"\n   }\n  },\n  {\n   \"description\": \"anim\",\n   \"defaultValue\": {},\n   \"mandatories\": \"DeviceInstance\",\n   \"levels\": \"DeviceTemplate\",\n   \"key\": \"eiusmod non ad\",\n   \"type\": {\n    \"type\": \"irure\",\n    \"tag\": \"enim est eiusmod commodo\",\n    \"id\": \"labore aute\",\n    \"transport\": \"BACnet\",\n    \"name\": \"et\"\n   }\n  }\n ],\n \"methods\": [\n  {\n   \"name\": \"cupidatat commodo ipsum sit\",\n   \"parameters\": [\n    {\n     \"typeId\": \"Duis ex\",\n     \"isStatic\": false,\n     \"name\": \"mollit sed cillum\",\n     \"isReadOnly\": true,\n     \"defaultValue\": {},\n     \"isPublic\": true,\n     \"identifier\": \"est s\",\n     \"id\": \"aliquip laboris\"\n    },\n    {\n     \"typeId\": \"Duis aute\",\n     \"isStatic\": true,\n     \"name\": \"elit adipisicing\",\n     \"isReadOnly\": false,\n     \"defaultValue\": {},\n     \"isPublic\": false,\n     \"identifier\": \"aliquip proiden\",\n     \"id\": \"et ea Duis laboris\"\n    }\n   ],\n   \"asynchronous\": false,\n   \"result\": [\n    {\n     \"typeId\": \"Ut exercitation ipsum voluptate\",\n     \"isStatic\": true,\n     \"name\": \"dolore velit elit dolore\",\n     \"isReadOnly\": false,\n     \"defaultValue\": {},\n     \"isPublic\": false,\n     \"identifier\": \"ad do\",\n     \"id\": \"nisi\"\n    },\n    {\n     \"typeId\": \"exercitation consequat dolor\",\n     \"isStatic\": false,\n     \"name\": \"non laboris dolore\",\n     \"isReadOnly\": true,\n     \"defaultValue\": {},\n     \"isPublic\": false,\n     \"identifier\": \"cillum non\",\n     \"id\": \"est\"\n    }\n   ],\n   \"identifier\": \"adipisicing velit\",\n   \"id\": \"ipsum elit sed dolor\"\n  },\n  {\n   \"name\": \"minim nostrud pariatur\",\n   \"parameters\": [\n    {\n     \"typeId\": \"nulla proident laboris\",\n     \"isStatic\": false,\n     \"name\": \"reprehenderit\",\n     \"isReadOnly\": true,\n     \"defaultValue\": {},\n     \"isPublic\": false,\n     \"identifier\": \"sint\",\n     \"id\": \"adipisicing ea sunt ipsum\"\n    },\n    {\n     \"typeId\": \"Lorem sunt\",\n     \"isStatic\": false,\n     \"name\": \"incididunt enim\",\n     \"isReadOnly\": false,\n     \"defaultValue\": {},\n     \"isPublic\": true,\n     \"identifier\": \"pariatur laboris Lorem\",\n     \"id\": \"Ut in\"\n    }\n   ],\n   \"asynchronous\": false,\n   \"result\": [\n    {\n     \"typeId\": \"officia dolor\",\n     \"isStatic\": false,\n     \"name\": \"amet ipsum\",\n     \"isReadOnly\": false,\n     \"defaultValue\": {},\n     \"isPublic\": false,\n     \"identifier\": \"proident in qui\",\n     \"id\": \"labore in veniam\"\n    },\n    {\n     \"typeId\": \"anim ex D\",\n     \"isStatic\": true,\n     \"name\": \"sed quis non\",\n     \"isReadOnly\": true,\n     \"defaultValue\": {},\n     \"isPublic\": false,\n     \"identifier\": \"ut tempor\",\n     \"id\": \"id commodo proident culpa\"\n    }\n   ],\n   \"identifier\": \"sed aliquip et eiusmod\",\n   \"id\": \"minim ea cillum laborum\"\n  }\n ],\n \"multiInstanceOnIP\": true,\n \"company\": \"commodo proident pariatur cillum\",\n \"multiInstance\": true,\n \"properties\": [\n  {\n   \"typeId\": \"proident mollit voluptate veniam magna\",\n   \"isStatic\": false,\n   \"name\": \"non consectetur Lorem sit Ut\",\n   \"isReadOnly\": true,\n   \"defaultValue\": {},\n   \"isPublic\": true,\n   \"identifier\": \"sed est sunt\",\n   \"id\": \"consequat quis pariatur\"\n  },\n  {\n   \"typeId\": \"cupidatat aut\",\n   \"isStatic\": false,\n   \"name\": \"ut\",\n   \"isReadOnly\": true,\n   \"defaultValue\": {},\n   \"isPublic\": false,\n   \"identifier\": \"ad Duis irure\",\n   \"id\": \"culpa in\"\n  }\n ],\n \"version\": \"ullamco\",\n \"groupByPort\": \"sit ex ut dolor voluptate\",\n \"portType\": \"Serial\",\n \"identifier\": \"laborum cupidatat minim fugiat id\",\n \"id\": \"adipisicing officia\",\n \"transport\": \"none\",\n \"name\": \"reprehenderit eiusmod\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "projectsettings",
							"item": [
								{
									"name": "Get the project settings",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/projectsettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"projectsettings"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>Get the project settings of <b>openBOS</b>\r\n<br>\r\n            Settings include name, details, language, supported languages, device synchronisation status, interval of synchronization with Cloud, …\r\n            "
									},
									"response": [
										{
											"name": "Returns the object containing project settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/projectsettings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"projectsettings"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"supportedLanguages\": [\n  \"string\"\n ],\n \"projectName\": \"string\",\n \"intervalSynchroCloudUserOnChangeInSeconds\": 0,\n \"runtimeDefaultLanguage\": \"string\",\n \"deviceDetails\": \"string\",\n \"intervalSynchroCloudUserOnErrorInSeconds\": 0,\n \"isFactoryResetSynchronized\": true,\n \"isDeviceSynchronized\": true\n}"
										}
									]
								},
								{
									"name": "Put the project settings",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"supportedLanguages\": [\n        \"string\"\n    ],\n    \"projectName\": \"string\",\n    \"intervalSynchroCloudUserOnChangeInSeconds\": 0,\n    \"runtimeDefaultLanguage\": \"string\",\n    \"deviceDetails\": \"string\",\n    \"intervalSynchroCloudUserOnErrorInSeconds\": 0,\n    \"isFactoryResetSynchronized\": true,\n    \"isDeviceSynchronized\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/projectsettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"projectsettings"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>Update the project settings of <b>openBOS</b>\r\n<br>\r\n            Settings include name, details, language, supported languages, device synchronisation status, interval of synchronization with Cloud, …\r\n            "
									},
									"response": [
										{
											"name": "Indicates the project settings has been successfuly updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"supportedLanguages\": [\n        \"string\"\n    ],\n    \"projectName\": \"string\",\n    \"intervalSynchroCloudUserOnChangeInSeconds\": 0,\n    \"runtimeDefaultLanguage\": \"string\",\n    \"deviceDetails\": \"string\",\n    \"intervalSynchroCloudUserOnErrorInSeconds\": 0,\n    \"isFactoryResetSynchronized\": true,\n    \"isDeviceSynchronized\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/projectsettings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"projectsettings"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"supportedLanguages\": [\n        \"string\"\n    ],\n    \"projectName\": \"string\",\n    \"intervalSynchroCloudUserOnChangeInSeconds\": 0,\n    \"runtimeDefaultLanguage\": \"string\",\n    \"deviceDetails\": \"string\",\n    \"intervalSynchroCloudUserOnErrorInSeconds\": 0,\n    \"isFactoryResetSynchronized\": true,\n    \"isDeviceSynchronized\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/projectsettings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"projectsettings"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "network",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "organization",
											"item": [
												{
													"name": "Get the database of devices and parameters of a network",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/network/:id/organization",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"network",
																":id",
																"organization"
															],
															"query": [
																{
																	"key": "parentId",
																	"value": "consectetur minim ex Duis",
																	"description": "null to get the root branches, otherwise parent id of the branch to get its children",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "gwid",
																	"value": "{{gwid}}",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "",
																	"description": "(Required) Unique identifier of the network"
																}
															]
														},
														"description": "<br>A station is a hardware embedding at least one middleware.\r\n<br>That middleware may read several protocols.\r\n<br>Each protocol has a unique driver (i.e KNX) and may have several fieldbus networks of that protocol (several networks and database of the same protocol): the networks.\r\n<br>Each network includes a collection of devices, infrastructure, has a list of parameters, a list of datapoints, [...]: we call it the network organisation.\r\n<br>The network organisation is built has a standard hierarchic tree.\r\n<br>The exploration of an organization is done level by level by requesting the children .\r\n<br>This resource path retrieves a level in the hierarchic tree of the network organisation"
													},
													"response": [
														{
															"name": "Retrieves the branches matching parentId criteria",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																		"key": "Authorization",
																		"value": "consectetur minim ex Duis"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/network/:id/organization",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"gateway",
																		":gwid",
																		"api",
																		"v1",
																		"ontology",
																		"network",
																		":id",
																		"organization"
																	],
																	"query": [
																		{
																			"key": "parentId",
																			"value": "consectetur minim ex Duis",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "gwid"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n {\n  \"networkId\": \"string\",\n  \"protocolArguments\": {},\n  \"name\": \"string\",\n  \"childrenIds\": [\n   \"string\"\n  ],\n  \"datapoints\": [\n   {\n    \"networkId\": \"string\",\n    \"protocolArguments\": {},\n    \"direction\": \"Feedback\",\n    \"name\": \"string\",\n    \"typeId\": \"string\",\n    \"completeProtocolArguments\": {},\n    \"id\": \"string\",\n    \"description\": \"string\"\n   }\n  ],\n  \"type\": \"Device\",\n  \"id\": \"string\"\n }\n]"
														}
													]
												},
												{
													"name": "Get the version number of the database of devices and parameters of a network",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/network/:id/organization/information",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"network",
																":id",
																"organization",
																"information"
															],
															"variable": [
																{
																	"key": "gwid",
																	"value": "{{gwid}}",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "",
																	"description": "(Required) Unique identifier of the network"
																}
															]
														},
														"description": "<br>A station is a hardware embedding at least one middleware.That middleware may read several protocols.\r\n<br>Each protocol has a unique driver (i.e KNX) and may have several fieldbus networks of that protocol (several networks and database of the same protocol): the networks.\r\n<br>Each network includes a collection of devices, infrastructure, has a list of parameters, a list of datapoints, [...]: we call it the network organisation.\r\n<br>This resource path retrieves the internal version of the network organisation in the database (each update of the network organisation increase this version number)"
													},
													"response": [
														{
															"name": "Version information about the organization",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																		"key": "Authorization",
																		"value": "consectetur minim ex Duis"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/network/:id/organization/information",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"gateway",
																		":gwid",
																		"api",
																		"v1",
																		"ontology",
																		"network",
																		":id",
																		"organization",
																		"information"
																	],
																	"variable": [
																		{
																			"key": "gwid"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"version\": \"string\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get detail information of a specific network of a station.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/network/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"network",
														":id"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Unique identifier of the network"
														}
													]
												},
												"description": "<br>A station is a hardware embeding at least a middleware.\r\n<br>That middleware may read several protocols.\r\n<br>Each protocol has a unique driver (i.e KNX) and may have several fieldbus networks of that protocol (several networks and database of the same protocol): the networks.\r\n<br>That resource path gives the details of the specific network giving its unique identifier as parameter."
											},
											"response": [
												{
													"name": "Detail information of a specific network.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/network/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"network",
																":id"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": \"Ok\",\n \"temporaryOrganizationId\": \"string\",\n \"portId\": \"string\",\n \"name\": \"string\",\n \"organizationId\": \"string\",\n \"stationId\": \"string\",\n \"simulated\": true,\n \"driverDescriptorId\": \"string\",\n \"propertyValues\": [\n  {\n   \"identifier\": \"string\",\n   \"id\": \"string\",\n   \"value\": {}\n  }\n ],\n \"id\": \"string\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get the list of field bus networks available in the whole project.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/network",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"network"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>A station is a hardware embedding at least a middleware.\r\n<br>That middleware may read several protocols.\r\n<br>Each protocol has a unique driver (i.e KNX) and may have several fieldbus networks of that protocol (several networks and database of the same protocol): the networks.\r\n<br>A fieldbus network is a declared network of devices communicating on a protocol.\r\n<br>We may have for example LonWorks, BACnet, KNX, MQTT network That resource path returns the collection of available networks in a station.\r\n<br></br>\r\n<br>For detailled on a network use the dedicated network resource path with the ID of the network (.../network/{id}) "
									},
									"response": [
										{
											"name": "List of basics definition of network insied the project.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/network",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"network"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"status\": \"Ok\",\n  \"temporaryOrganizationId\": \"string\",\n  \"portId\": \"string\",\n  \"name\": \"string\",\n  \"organizationId\": \"string\",\n  \"stationId\": \"string\",\n  \"simulated\": true,\n  \"driverDescriptorId\": \"string\",\n  \"propertyValues\": [\n   {\n    \"identifier\": \"string\",\n    \"id\": \"string\",\n    \"value\": {}\n   }\n  ],\n  \"id\": \"string\"\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "stationsynchrostatus",
							"item": [
								{
									"name": "{station Id}",
									"item": [
										{
											"name": "Get the synchronization \"in-progress\" flag for a station.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/stationsynchrostatus/:stationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"stationsynchrostatus",
														":stationId"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "stationId",
															"value": "",
															"description": "(Required) id of the station"
														}
													]
												},
												"description": "<br>A station is an hardware embedding at least a middleware. That middleware may read several protocols and several networks. \r\n<br>The synchronization is the operation of keeping in sync the openBOS and its underlying middleware. \r\n<br>Each time an update is done on openBOS that has impact on the middleware layer (used to communicate with fieldbus devices) a synchronization is required to align both definition.\r\n<br>Each station can be configured to synchronize manually or automaticaly.\r\n<br>That routes retrieves a flag indicating if a synchronization is in progress on a specific station (specified by iyts id)."
											},
											"response": [
												{
													"name": "Retrieves a boolean indicating if a synchronization is in progress",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/stationsynchrostatus/:stationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"stationsynchrostatus",
																":stationId"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "stationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"True\""
												}
											]
										},
										{
											"name": "Get the status of synchronization of a specific station.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/stationsynchrostatus/:stationId/:tag",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"stationsynchrostatus",
														":stationId",
														":tag"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "stationId",
															"value": "",
															"description": "(Required) id of the station"
														},
														{
															"key": "tag",
															"value": "",
															"description": "(Required) tag returned by a forced synchronization"
														}
													]
												},
												"description": "<br>A station is an hardware embedding at least a middleware. That middleware may read several protocols and several networks. \r\n<br></br>\r\n<br>The synchronization is the operation of keeping in sync the openBOS and its underlying middleware. \r\n<br>Each time an update is done on openBOS that has impact on the middleware layer (used to communicate with fieldbus devices) a synchronization is required to align both definition.\r\n<br>Each station can be configured to synchronize manually or automaticaly.\r\n<br>That routes retrieves the status of a specific forced synchronization (specified by a tag) on a specific station (specified by its id)."
											},
											"response": [
												{
													"name": "Retrieves a boolean indicating if the synchronization is done",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/stationsynchrostatus/:stationId/:tag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"stationsynchrostatus",
																":stationId",
																":tag"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "stationId"
																},
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"True\""
												}
											]
										}
									]
								},
								{
									"name": "Get the status of synchronization of the stations inside the project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/stationsynchrostatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"stationsynchrostatus"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>A station is an hardware embedding at least a middleware. That middleware may read several protocols and several networks. \r\n<br></br>\r\n<br>The synchronization is the operation of keeping in sync the openBOS and its underlying middleware. \r\n<br>Each time an update is done on openBOS that has impact on the middleware layer (used to communicate with fieldbus devices) a synchronization is required to align both definition.\r\n<br>Synchronization can be set manual or automatic for each station.\r\n<br></br>\r\n<br>That routes retrieves the synchronization status for all the stations of the project."
									},
									"response": [
										{
											"name": "Retrieves synchronization status of middleware stations",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/stationsynchrostatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"stationsynchrostatus"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"lastSynchroResult\": \"string\",\n  \"lastSynchroType\": \"Full\",\n  \"alarmSynchroErrors\": [\n   {\n    \"id\": \"string\",\n    \"error\": \"string\"\n   }\n  ],\n  \"networkSynchroErrors\": [\n   {\n    \"stationId\": \"string\",\n    \"id\": \"string\",\n    \"error\": \"string\"\n   }\n  ],\n  \"numberOfConsecutiveSynchroErrors\": 0,\n  \"stationId\": \"string\",\n  \"lastSynchroDate\": \"string\",\n  \"trendSynchroErrors\": [\n   {\n    \"id\": \"string\",\n    \"error\": \"string\"\n   }\n  ]\n }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "LiveData",
					"item": [
						{
							"name": "datapointinstance/livedata",
							"item": [
								{
									"name": "fbsystem",
									"item": [
										{
											"name": "Read the System parameters of the Edge",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointinstance/livedata/fbsystem?id=id1&id=id2",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datapointinstance",
														"livedata",
														"fbsystem"
													],
													"query": [
														{
															"key": "id",
															"value": "id1",
															"description": "Id of datapoint to read.\r\nMust be [tag of system functional block]{[tag of datapoint]}\r\neg: $$function:system:devicedatetime--$$info::system:currenttime"
														},
														{
															"key": "id",
															"value": "id2",
															"description": "Id of datapoint to read.\r\nMust be [tag of system functional block]{[tag of datapoint]}\r\neg: $$function:system:devicedatetime--$$info::system:currenttime"
														}
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														}
													]
												},
												"description": "<br>Each edge has several system parameters (Hour, IP configuration, SNTP Config,...). Each individual parameter has an ID.\r\n<br>Here you read the individual parameter that are live data and not database data.You select it with its ID."
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointinstance/livedata/fbsystem?id=id1&id=id2",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"datapointinstance",
																"livedata",
																"fbsystem"
															],
															"query": [
																{
																	"key": "id",
																	"value": "id1"
																},
																{
																	"key": "id",
																	"value": "id2"
																}
															],
															"variable": [
																{
																	"key": "gwid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"innerError\": \"string\",\n  \"timeStamp\": \"string\",\n  \"quality\": \"none\",\n  \"id\": \"string\",\n  \"value\": {}\n }\n]"
												}
											]
										},
										{
											"name": "Write the value of datapoints",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"id\": \"string\",\n        \"value\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointinstance/livedata/fbsystem",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datapointinstance",
														"livedata",
														"fbsystem"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														}
													]
												},
												"description": "<br>Each edge has several system parameters (Hour, IP configuration, SNTP Config,...). Each individual parameter has an ID.\r\n<br>Here you may write one individual parameter that is a live data parameter and not database data parameter. You select it with its ID and give new value."
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"id\": \"string\",\n        \"value\": {}\n    }\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointinstance/livedata/fbsystem",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"datapointinstance",
																"livedata",
																"fbsystem"
															],
															"variable": [
																{
																	"key": "gwid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"errorCode\": \"string\",\n  \"innerError\": \"string\",\n  \"id\": \"string\"\n }\n]"
												}
											]
										}
									]
								},
								{
									"name": "Read value from a sensor",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointinstance/livedata?id=id1&id=id2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"datapointinstance",
												"livedata"
											],
											"query": [
												{
													"key": "id",
													"value": "id1",
													"description": "Id of the datapoints to read"
												},
												{
													"key": "id",
													"value": "id2",
													"description": "Id of the datapoints to read"
												}
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>A datapoint Instance is a variable of a sensor or actuator.\r\n<br>With that resource path you read the value of a sensor from the network knowing the ID of the datapoint."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointinstance/livedata?id=string&id=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datapointinstance",
														"livedata"
													],
													"query": [
														{
															"key": "id",
															"value": "string"
														},
														{
															"key": "id",
															"value": "string"
														}
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"innerError\": \"string\",\n  \"timeStamp\": \"string\",\n  \"quality\": \"none\",\n  \"id\": \"string\",\n  \"value\": {}\n }\n]"
										}
									]
								},
								{
									"name": "Write value to an actuator",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"id\": \"string\",\n        \"value\": {}\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointinstance/livedata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"datapointinstance",
												"livedata"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>A datapoint Instance is a variable of a sensor or actuator.\r\n<br>With that resource path you force an output of an actuator with a value knowing the ID of the datapoint."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"id\": \"string\",\n        \"value\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointinstance/livedata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datapointinstance",
														"livedata"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorCode\": \"string\",\n  \"innerError\": \"string\",\n  \"id\": \"string\"\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "datapointsubscription",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Update parameters of an existing subscription in the system.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"webhookRetryDelay\": 0,\n    \"webhookRetryCount\": 0,\n    \"tags\": [\n        \"string\"\n    ],\n    \"items\": [\n        {\n            \"scanRate\": 0,\n            \"deadBand\": 0,\n            \"tags\": [\n                \"string\"\n            ],\n            \"datapointInstanceId\": \"string\"\n        }\n    ],\n    \"minSendTime\": 0,\n    \"connectionId\": \"string\",\n    \"maxSendTime\": 0,\n    \"id\": \"string\",\n    \"webhookURL\": \"string\",\n    \"keepAllChanges\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointsubscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datapointsubscription",
														":id"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Unique identifier of the subscription to update"
														}
													]
												},
												"description": "Every subscription have an ID. With that resource path you may change one or all the parameters of that subscription"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"webhookRetryDelay\": 0,\n    \"webhookRetryCount\": 0,\n    \"tags\": [\n        \"string\"\n    ],\n    \"items\": [\n        {\n            \"scanRate\": 0,\n            \"deadBand\": 0,\n            \"tags\": [\n                \"string\"\n            ],\n            \"datapointInstanceId\": \"string\"\n        }\n    ],\n    \"minSendTime\": 0,\n    \"connectionId\": \"string\",\n    \"maxSendTime\": 0,\n    \"id\": \"string\",\n    \"webhookURL\": \"string\",\n    \"keepAllChanges\": true\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointsubscription/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"datapointsubscription",
																":id"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete an existing subscription in the system.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointsubscription/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datapointsubscription",
														":id"
													],
													"variable": [
														{
															"key": "gwid",
															"value": "{{gwid}}",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) Unique identifier of the subscription to delete"
														}
													]
												},
												"description": "Delete an existing subscription in the system. Need to knwo the ID of the subscription"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
																"key": "Authorization",
																"value": "consectetur minim ex Duis"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointsubscription/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gateway",
																":gwid",
																"api",
																"v1",
																"ontology",
																"datapointsubscription",
																":id"
															],
															"variable": [
																{
																	"key": "gwid"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Create a subscription to receive datapoint value change notifications.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"webhookRetryDelay\": 0,\n    \"webhookRetryCount\": 0,\n    \"tags\": [\n        \"string\"\n    ],\n    \"items\": [\n        {\n            \"scanRate\": 0,\n            \"deadBand\": 0,\n            \"tags\": [\n                \"string\"\n            ],\n            \"datapointInstanceId\": \"string\"\n        }\n    ],\n    \"minSendTime\": 0,\n    \"connectionId\": \"string\",\n    \"maxSendTime\": 0,\n    \"id\": \"string\",\n    \"webhookURL\": \"string\",\n    \"keepAllChanges\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointsubscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"datapointsubscription"
											],
											"variable": [
												{
													"key": "gwid",
													"value": "{{gwid}}",
													"description": "(Required) "
												}
											]
										},
										"description": "<br>We propose an event driven mechanism to access to data change. Instead of continuously reading a data you may subscribe to a value change.\r\n<br>You need to give the ID of the datapoints, the parameters of automatic scanning for the dataserver engine in the edge and the WebHook parameters"
									},
									"response": [
										{
											"name": "Returns the newly created item",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
														"key": "Authorization",
														"value": "consectetur minim ex Duis"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"webhookRetryDelay\": 0,\n    \"webhookRetryCount\": 0,\n    \"tags\": [\n        \"string\"\n    ],\n    \"items\": [\n        {\n            \"scanRate\": 0,\n            \"deadBand\": 0,\n            \"tags\": [\n                \"string\"\n            ],\n            \"datapointInstanceId\": \"string\"\n        }\n    ],\n    \"minSendTime\": 0,\n    \"connectionId\": \"string\",\n    \"maxSendTime\": 0,\n    \"id\": \"string\",\n    \"webhookURL\": \"string\",\n    \"keepAllChanges\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/datapointsubscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gateway",
														":gwid",
														"api",
														"v1",
														"ontology",
														"datapointsubscription"
													],
													"variable": [
														{
															"key": "gwid"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"webhookRetryDelay\": 0,\n \"webhookRetryCount\": 0,\n \"tags\": [\n  \"string\"\n ],\n \"items\": [\n  {\n   \"scanRate\": 0,\n   \"deadBand\": 0,\n   \"tags\": [\n    \"string\"\n   ],\n   \"datapointInstanceId\": \"string\"\n  }\n ],\n \"minSendTime\": 0,\n \"connectionId\": \"string\",\n \"maxSendTime\": 0,\n \"id\": \"string\",\n \"webhookURL\": \"string\",\n \"keepAllChanges\": true\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "MapView",
					"item": [
						{
							"name": "Returns the mapview definition of a structure",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/mapview",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gateway",
										":gwid",
										"api",
										"v1",
										"ontology",
										"mapview"
									],
									"query": [
										{
											"key": "zoneId",
											"value": "consectetur minim ex Duis",
											"description": "Unique identifier of the structure for which the mapview is requested",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "gwid",
											"value": "{{gwid}}",
											"description": "(Required) "
										}
									]
								},
								"description": "The mapview is the graphical representation of a structure in 2D including its spaces and areas.\r\n\r\nThis resource path returns the mapview definition (zoom, tiles). To get the coordinates of the spaces and area you must make a subsequent call to .../mapview/{id}/graphics wher {id} is the id in the definition object returned here"
							},
							"response": [
								{
									"name": "The object definition of the mapview.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
												"key": "Authorization",
												"value": "consectetur minim ex Duis"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/mapview?zoneId=consectetur minim ex Duis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"mapview"
											],
											"query": [
												{
													"key": "zoneId",
													"value": "consectetur minim ex Duis"
												}
											],
											"variable": [
												{
													"key": "gwid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"lastFunctionalBlockSizes\": {},\n  \"tilesDirectory\": \"string\",\n  \"scaleMeterForLogicOne\": 0,\n  \"maxZoomLevel\": 0,\n  \"ratioXonY\": 0,\n  \"zoneId\": \"string\",\n  \"geoloc\": {\n   \"value\": {\n    \"y\": 0,\n    \"x\": 0\n   },\n   \"key\": {\n    \"y\": 0,\n    \"x\": 0\n   }\n  },\n  \"delimitArea\": [\n   [\n    {\n     \"y\": 0,\n     \"x\": 0\n    }\n   ]\n  ],\n  \"fileName\": \"string\",\n  \"id\": \"string\"\n }\n]"
								}
							]
						},
						{
							"name": "Returns the coordinates of all the items present in the mapview",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/mapview/:id/graphics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gateway",
										":gwid",
										"api",
										"v1",
										"ontology",
										"mapview",
										":id",
										"graphics"
									],
									"variable": [
										{
											"key": "gwid",
											"value": "{{gwid}}",
											"description": "(Required) "
										},
										{
											"key": "id",
											"value": "",
											"description": "(Required) Unique identifier of the mapview"
										}
									]
								},
								"description": "The mapview is the graphical representation of a structure in 2D including its spaces and areas.\r\n\r\nThis resource path returns the coordinates of the spaces (MapViewElementZoneDTO), areas (MapViewElementZoneDTO), functionalblock (MapViewElementFBDTO), text (MapViewElementTextDTO), images (MapViewElementImageDTO) that have been put on the mapview."
							},
							"response": [
								{
									"name": "The object definition of mapview items and their coordinates.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
												"key": "Authorization",
												"value": "consectetur minim ex Duis"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/mapview/:id/graphics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gateway",
												":gwid",
												"api",
												"v1",
												"ontology",
												"mapview",
												":id",
												"graphics"
											],
											"variable": [
												{
													"key": "gwid"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"functionalBlockId\": \"string\",\n  \"size\": {\n   \"width\": 0,\n   \"height\": 0\n  },\n  \"type\": \"None\",\n  \"orientation\": 0,\n  \"position\": {\n   \"y\": 0,\n   \"x\": 0\n  },\n  \"zOrder\": 0,\n  \"id\": \"string\"\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Executes several queries into a single batch command",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"useTransaction\": true,\n    \"requests\": [\n        {\n            \"content\": \"string\",\n            \"uri\": \"string\",\n            \"method\": \"string\"\n        }\n    ],\n    \"stopAtFirstError\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gateway",
								":gwid",
								"api",
								"v1",
								"ontology",
								"batch"
							],
							"variable": [
								{
									"key": "gwid",
									"value": "{{gwid}}",
									"description": "(Required) "
								}
							]
						},
						"description": "<br>Allows to <b>get</b> in a single call several requests executed on the server.\r\n<br>Can be very useful when many information from different entities need to be collected at a time.\r\n<br>For example retrieve detailed information of all the assets of a single zone in one shot."
					},
					"response": [
						{
							"name": "List of result code and result content of each query from the batch",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
										"key": "Authorization",
										"value": "consectetur minim ex Duis"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"useTransaction\": true,\n    \"requests\": [\n        {\n            \"content\": \"string\",\n            \"uri\": \"string\",\n            \"method\": \"string\"\n        }\n    ],\n    \"stopAtFirstError\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gateway",
										":gwid",
										"api",
										"v1",
										"ontology",
										"batch"
									],
									"variable": [
										{
											"key": "gwid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The AAD JWT token that contains credentials to authenticate the user. Example: 'Bearer 12345abcdef'",
										"key": "Authorization",
										"value": "consectetur minim ex Duis"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"useTransaction\": true,\n    \"requests\": [\n        {\n            \"content\": \"string\",\n            \"uri\": \"string\",\n            \"method\": \"string\"\n        }\n    ],\n    \"stopAtFirstError\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gateway/:gwid/api/v1/ontology/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gateway",
										":gwid",
										"api",
										"v1",
										"ontology",
										"batch"
									],
									"variable": [
										{
											"key": "gwid"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"status\": \"Continue\",\n  \"content\": \"string\"\n }\n]"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "clientId",
				"value": "",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "scope",
				"value": "api://openbos/Relation.Read api://openbos/License.Read api://openbos/BosApi.Proxy api://openbos/User.Delete api://openbos/Relation.ReadWrite api://openbos/License.ReadWrite offline_access",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "header",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://oauth.pstmn.io/v1/callback",
				"type": "string"
			},
			{
				"key": "state",
				"value": "123",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://login.microsoftonline.com/372ee9e0-9ce0-4033-a64a-c07073a91ecd/oauth2/v2.0/authorize",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://login.microsoftonline.com/372ee9e0-9ce0-4033-a64a-c07073a91ecd/oauth2/v2.0/token",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "Token",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.electrification.ability.abb/buildings/openbos/apiproxy/v1"
		},
		{
			"key": "gwid",
			"value": "edge-id"
		},
		{
			"key": "clientid",
			"value": ""
		}
	]
}